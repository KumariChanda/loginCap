{"version":3,"sources":["webpack:///src/app/pages/profile/profile.page.html","webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/profile.page.scss","webpack:///src/app/pages/profile/profile.page.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","Storage","ProfilePage","webService","router","profile","btnClicked","editableText","profileData","userType","userId","show","console","log","getdata","JSON","get","key","value","userInfo","parse","address","birth_date","email","first_name","last_name","telephone","id","getCurrentLanguage","then","val","sendMessage","setTimeout","token","lang","presentLoading","EditClientProfile","subscribe","res","stopLoading","detail","alert","set","stringify","prev","error","selector","template"],"mappings":"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","file":"pages-profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-item *ngIf=\\\"(editableText==true && userType=='client') ||userType=='chauffeur' \\\">\\n\\n           <!-- menu icon -->\\n          <ion-buttons  slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n          </ion-buttons>\\n\\n          <!-- title -->\\n          <ion-title >{{ 'DASHBOARD.profile' | translate }}</ion-title>\\n        </ion-item>\\n\\n       <!-- ------------------------------------------------------------------------------ -->\\n        <!-- ----------------------If edit has been clicked --------------------------------------------- -->\\n        <ion-item *ngIf=\\\"editableText==false && userType=='client'\\\" >\\n\\n           <!-- prev icon -->\\n           <ion-icon color=\\\"light\\\" name=\\\"chevron-back\\\" (click)=\\\"prev()\\\" ></ion-icon>\\n\\n          <!-- title -->\\n          <ion-title >{{ 'DASHBOARD.edit_profile_title' | translate }}</ion-title>\\n        </ion-item>\\n \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"show\\\" >\\n \\n          <!-- profile Image -->\\n         \\n     <ion-card>\\n\\n        \\n        <ion-card-header>\\n          <ion-card-subtitle>\\n             \\n            <div >\\n              <ion-grid *ngIf=\\\"editableText==true\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"4\\\" >\\n                    <img   [src]=\\\"profile\\\"  class=\\\"image-icon\\\" >\\n                  </ion-col>\\n                   <ion-col size=\\\"8\\\">\\n                    <div>                \\n                       <br><br> <br>\\n                       <!-- Full name      -->\\n                       <strong> <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{profileData.first_name}}  {{profileData.last_name}} </b>\\n                       </ion-label> </strong>\\n                        <br><br>\\n                       \\n\\n                    </div>                    \\n                  </ion-col>\\n                  </ion-row> \\n                      \\n                       <!-- DOB      -->\\n                       <ion-item>\\n                         <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n                         <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{profileData.birth_date}}  </b></ion-label>\\n                       </ion-item> \\n                       <!-- Email id     -->\\n                       <ion-item>\\n                          <ion-icon name=\\\"at-outline\\\"></ion-icon>\\n                          <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{profileData.email}}  </b></ion-label>\\n                        </ion-item> \\n                       <!-- phone number    -->\\n                        <ion-item>\\n                          <ion-icon name=\\\"call-outline\\\"></ion-icon>\\n                        <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{profileData.telephone}}  </b></ion-label>\\n                        </ion-item> \\n                        <!-- address -->\\n                        <ion-item>\\n                          <ion-icon name=\\\"pin-outline\\\"></ion-icon>\\n                        <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{profileData.address}}  </b></ion-label>\\n                        </ion-item> \\n                  </ion-grid>  \\n                             \\n              </div>\\n\\n          </ion-card-subtitle>\\n          <!-- <ion-card-title  >  My informations :</ion-card-title> -->\\n        </ion-card-header>\\n        <ion-card-content>\\n                \\n            <div *ngIf=\\\"editableText==false && userType=='client'\\\">\\n                  <!-- name      -->\\n                <ion-label style=\\\"size: 20vw;\\\" >&nbsp; <b>{{\\\"PROFILE.first_name\\\"| translate}} : </b></ion-label>\\n                <br>   \\n                <ion-input  type=\\\"text\\\" [(ngModel)]=\\\"profileData.first_name\\\"  placeholder=\\\"First name\\\" [disabled]=\\\"editableText\\\"></ion-input>\\n                <br>\\n                <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{\\\"PROFILE.last_name\\\"| translate}} : </b></ion-label>\\n                <br>\\n                <ion-input  type=\\\"text\\\"  [(ngModel)]=\\\"profileData.last_name\\\"  placeholder=\\\"Last name\\\" [disabled]=\\\"editableText\\\"></ion-input>\\n                <br>\\n                <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{\\\"PROFILE.email_address\\\"| translate}} : </b></ion-label>\\n                <br>\\n                <ion-input  type=\\\"text\\\" [(ngModel)]=\\\"profileData.email\\\"  placeholder=\\\"Email Address\\\" [disabled]=\\\"editableText\\\"></ion-input>\\n                <br>\\n                <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{\\\"PROFILE.mobile\\\"| translate}} : </b></ion-label>\\n                <br>\\n                <ion-input  type=\\\"number\\\" [(ngModel)]=\\\"profileData.telephone\\\" placeholder=\\\"Mobile number\\\" [disabled]=\\\"editableText\\\"></ion-input>\\n                <br>\\n                <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{\\\"PROFILE.dob\\\"| translate}} : </b></ion-label>\\n                <br>\\n                <ion-input  type=\\\"date\\\"  [(ngModel)]=\\\"profileData.birth_date\\\" [disabled]=\\\"editableText\\\"></ion-input>\\n                <br>\\n                <ion-label style=\\\"size: 20vw;\\\">&nbsp; <b> {{\\\"PROFILE.address\\\"| translate}} : </b></ion-label>\\n                <br>\\n                <ion-input  type=\\\"text\\\" [(ngModel)]=\\\"profileData.address\\\"  placeholder=\\\"Address\\\" [disabled]=\\\"editableText\\\"></ion-input>\\n                <br>\\n               \\n\\n            </div>     \\n                <div class=\\\"divloginbtn\\\">\\n\\n                  <!-- <button [ngClass]=\\\"{'loginbtn_black':btnClicked == true,\\n                   'loginbtn_yellow':btnClicked == false}\\\" (click)=\\\"editProfile()\\\" *ngIf=\\\"editableText==true && userType=='client'\\\"> {{\\\"PROFILE.edit_profile\\\"| translate}}</button>\\n                 <button [ngClass]=\\\"{'loginbtn_black':btnClicked == true,\\n                   'loginbtn_yellow':btnClicked == false}\\\" (click)=\\\"saveProfile()\\\" *ngIf=\\\"editableText==false && userType=='client'\\\"> {{ 'DASHBOARD.save_profile' | translate }}</button>\\n                  -->\\n                  </div>\\n              \\n        </ion-card-content>\\n      </ion-card>\\n\\n    <!-- </ion-item> -->\\n</ion-content>\\n<ion-footer *ngIf=\\\"show\\\" >\\n  <!-- <ion-toolbar> -->\\n       <!-- if the token is not null -->\\n    <!-- <ion-button  expand=\\\"full\\\"  [ngClass]=\\\"{'loginbtn_black':btnClicked == true,\\n    'loginbtn_yellow':btnClicked == false}\\\" (click)=\\\"save()\\\">{{ 'DASHBOARD.post_testimonial' | translate }}</ion-button> -->\\n    <button expand=\\\"full\\\" [ngClass]=\\\"{'loginbtn_black':btnClicked == true,\\n    'loginbtn_yellow':btnClicked == false}\\\" (click)=\\\"editProfile()\\\" *ngIf=\\\"editableText==true && userType=='client'\\\"> {{\\\"PROFILE.edit_profile\\\"| translate}}</button>\\n  <button [ngClass]=\\\"{'loginbtn_black':btnClicked == true,\\n    'loginbtn_yellow':btnClicked == false}\\\" (click)=\\\"saveProfile()\\\" *ngIf=\\\"editableText==false && userType=='client'\\\"> {{ 'DASHBOARD.save_profile' | translate }}</button>\\n  \\n\\n  <!-- </ion-toolbar> -->\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"ion-card, ion-toolbar, ion-segment {\\n  --background: black;\\n}\\n\\nion-item, ion-menu-button, ion-icon {\\n  --background: black;\\n  color: #ffa60a;\\n}\\n\\nion-chip, ion-button {\\n  color: black;\\n  --background: #ffa60a;\\n  border-color: black;\\n}\\n\\nion-segment-button, ion-card-title {\\n  color: #ffa60a;\\n}\\n\\nion-label {\\n  color: #ffa60a;\\n}\\n\\n.image-icon {\\n  height: 100px;\\n  width: 100px;\\n  border-radius: 50px;\\n}\\n\\nion-input {\\n  border-radius: 30px;\\n  color: black;\\n  background-color: white;\\n}\\n\\n.divloginbtn {\\n  text-align: center;\\n}\\n\\n.loginbtn_black {\\n  background-color: black;\\n  color: #ffa60a;\\n  font-weight: 800;\\n  transition: all 0.3s linear 0s;\\n  width: 100vw;\\n  height: 10vw;\\n  box-shadow: 0 2px 0 #ffa60a, 0 3px 0px #e4e4e4;\\n}\\n\\n.loginbtn_yellow {\\n  background-color: #ffa60a;\\n  color: black;\\n  font-weight: 800;\\n  transition: all 0.3s linear 0s;\\n  width: 100vw;\\n  height: 10vw;\\n  box-shadow: 0 2px 0 #ffa60a, 0 3px 0px #e4e4e4;\\n}\\n\\nion-title {\\n  margin-left: -10%;\\n  text-overflow: unset;\\n  white-space: unset;\\n  font-size: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jcGNraW5nZG9tL0RvY3VtZW50cy9pb25pYy10dXRvcmlhbC1tYXN0ZXIvaW9uaWNfcHJvamVjdC9sb2dpbkNhcC9zcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxtQkFBQTtBQ0FKOztBREtBO0VBRUksbUJBQUE7RUFDQSxjQUFBO0FDSEo7O0FETUE7RUFFSSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtBQ0pKOztBRE9BO0VBRUksY0FBQTtBQ0xKOztBRFFBO0VBRUksY0FBQTtBQ05KOztBRFFBO0VBRUksYUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtBQ05KOztBRFFBO0VBRUksbUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7QUNOSjs7QURTQTtFQUNJLGtCQUFBO0FDTko7O0FEUUU7RUFFSSx1QkFBQTtFQUVBLGNBQUE7RUFFQSxnQkFBQTtFQUlBLDhCQUFBO0VBRUYsWUFBQTtFQUNBLFlBQUE7RUFDRSw4Q0FBQTtBQ1pOOztBRGVJO0VBRUUseUJBQUE7RUFFQSxZQUFBO0VBRUEsZ0JBQUE7RUFJQSw4QkFBQTtFQUVGLFlBQUE7RUFDQSxZQUFBO0VBQ0UsOENBQUE7QUNuQk47O0FEcUJBO0VBRUksaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQ25CSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZCxpb24tdG9vbGJhcixpb24tc2VnbWVudFxue1xuICAgIC0tYmFja2dyb3VuZDogYmxhY2s7IFxufVxuXG5cblxuaW9uLWl0ZW0saW9uLW1lbnUtYnV0dG9uLGlvbi1pY29uXG57XG4gICAgLS1iYWNrZ3JvdW5kOiBibGFjazsgXG4gICAgY29sb3I6ICAjZmZhNjBhO1xufVxuXG5pb24tY2hpcCxpb24tYnV0dG9uXG57XG4gICAgY29sb3I6IGJsYWNrOyBcbiAgICAtLWJhY2tncm91bmQ6ICNmZmE2MGE7XG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcbn1cblxuaW9uLXNlZ21lbnQtYnV0dG9uLGlvbi1jYXJkLXRpdGxlIFxue1xuICAgIGNvbG9yIDogI2ZmYTYwYTtcbn1cblxuaW9uLWxhYmVsXG57XG4gICAgY29sb3IgOiAjZmZhNjBhO1xufVxuLmltYWdlLWljb24ge1xuXG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgfVxuaW9uLWlucHV0XG57XG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgLy8gbWFyZ2luOiA1dncgMzV2dztcbn1cbi5kaXZsb2dpbmJ0bntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmxvZ2luYnRuX2JsYWNrXG4gIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIC8vICAgYm9yZGVyOiBtZWRpdW0gbm9uZTtcbiAgICAgIGNvbG9yOiAjZmZhNjBhO1xuICAgICAgLy9mb250LXNpemU6IDE2cHg7XG4gICAgICBmb250LXdlaWdodDogODAwO1xuICAgICAgLy9saW5lLWhlaWdodDogMzBweDtcbiAgICAvLyAgIG1hcmdpbjogYXV0bztcbiAgICAvLyAgIHBhZGRpbmc6IDN2dyAzdnc7O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyIDBzO1xuICAgIC8vICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMHZ3O1xuICAgICAgYm94LXNoYWRvdzogMCAycHggMCAjZmZhNjBhLCAwIDNweCAwcHggI2U0ZTRlNDtcbiAgICB9XG4gICAgXG4gICAgLmxvZ2luYnRuX3llbGxvd1xuICB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZhNjBhO1xuICAgIC8vICAgYm9yZGVyOiBtZWRpdW0gbm9uZTtcbiAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgIC8vZm9udC1zaXplOiAxNnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICAgIC8vbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgLy8gICBtYXJnaW46IGF1dG87XG4gICAgLy8gICBwYWRkaW5nOiAzdncgM3Z3OztcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhciAwcztcbiAgICAvLyAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGhlaWdodDogMTB2dztcbiAgICAgIGJveC1zaGFkb3c6IDAgMnB4IDAgI2ZmYTYwYSwgMCAzcHggMHB4ICNlNGU0ZTQ7XG4gICAgfVxuaW9uLXRpdGxlXG57XG4gICAgbWFyZ2luLWxlZnQgOiAtMTAlO1xuICAgIHRleHQtb3ZlcmZsb3c6IHVuc2V0O1xuICAgIHdoaXRlLXNwYWNlOiB1bnNldDtcbiAgICBmb250LXNpemU6IDIwcHg7XG59IiwiaW9uLWNhcmQsIGlvbi10b29sYmFyLCBpb24tc2VnbWVudCB7XG4gIC0tYmFja2dyb3VuZDogYmxhY2s7XG59XG5cbmlvbi1pdGVtLCBpb24tbWVudS1idXR0b24sIGlvbi1pY29uIHtcbiAgLS1iYWNrZ3JvdW5kOiBibGFjaztcbiAgY29sb3I6ICNmZmE2MGE7XG59XG5cbmlvbi1jaGlwLCBpb24tYnV0dG9uIHtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJhY2tncm91bmQ6ICNmZmE2MGE7XG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XG59XG5cbmlvbi1zZWdtZW50LWJ1dHRvbiwgaW9uLWNhcmQtdGl0bGUge1xuICBjb2xvcjogI2ZmYTYwYTtcbn1cblxuaW9uLWxhYmVsIHtcbiAgY29sb3I6ICNmZmE2MGE7XG59XG5cbi5pbWFnZS1pY29uIHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IDEwMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MHB4O1xufVxuXG5pb24taW5wdXQge1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uZGl2bG9naW5idG4ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5sb2dpbmJ0bl9ibGFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBjb2xvcjogI2ZmYTYwYTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyIDBzO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTB2dztcbiAgYm94LXNoYWRvdzogMCAycHggMCAjZmZhNjBhLCAwIDNweCAwcHggI2U0ZTRlNDtcbn1cblxuLmxvZ2luYnRuX3llbGxvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmE2MGE7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyIDBzO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTB2dztcbiAgYm94LXNoYWRvdzogMCAycHggMCAjZmZhNjBhLCAwIDNweCAwcHggI2U0ZTRlNDtcbn1cblxuaW9uLXRpdGxlIHtcbiAgbWFyZ2luLWxlZnQ6IC0xMCU7XG4gIHRleHQtb3ZlcmZsb3c6IHVuc2V0O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQ7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AppServiceService } from 'src/app/service/appService/app-service.service';\nimport { Plugins } from '@capacitor/core';\nimport { Router } from '@angular/router';\n\nconst { Storage } = Plugins;\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  profile='../assets/imgs/profile.png';\n  btnClicked:boolean=false;\n  editableText:boolean=true;\n   profileData={\n   \"first_name\" :\"\",\n   \"last_name\" :\"\",\n   \"telephone\" :\"\",\n   \"email\" :\"\",\n   \"birth_date\" :\"\",\n   \"address\" :\"\",\n   \"password\":null\n  }\n   agreement : boolean;\n  userInfo: any;\n  userType: string =\"\";\n  userId = 0;\n\n  show = false;\n  token: string;\n  lang: string;\n\n  constructor(private webService: AppServiceService, private router : Router) {\n\n    this.btnClicked=false;\n    console.log(\"Before editableText : \",this.editableText);\n    \n    \n   }\n\n   async ngOnInit() {\n    // this.webService.presentLoading();\n    this.getdata();\n    \n  \n      \n   \n    ////////////////////////////////////////////////\n  }\n\n  async getdata()\n  {\n    \n    this.userInfo =JSON.parse( (await Storage.get({ key: \"user_infos\" })).value);\n    console.log(\"Storage : \",this.userInfo);\n    this.profileData.address=this.userInfo.address;\n    this.profileData.birth_date=this.userInfo.birth_date;\n    this.profileData.email=this.userInfo.email;\n    this.profileData.first_name=this.userInfo.first_name;\n    this.profileData.last_name=this.userInfo.last_name;\n    this.profileData.telephone=this.userInfo.telephone;\n    this.userId =this.userInfo.id;\n\n\n    //get user type\n    this.userType = (await Storage.get({ key: \"user_type\" })).value;\n    // this.webService.stopLoading();\n    //get the current language of the app   \n    this.webService.getCurrentLanguage().then(async val =>{ \n\n      // console.log(\"home  \",val)\n        this.webService.sendMessage({'token': \"mytoken\", 'language': val })\n    });//end get app language\n  \n   //show the contain\n   this.show = true;\n  }\n\n editProfile()\n  {\n      this.btnClicked=true;\n      this.editableText=false;\n      console.log(\"btnClicked : \",this.btnClicked);\n      console.log(\"DOB : \",this.userId);     \n      setTimeout( ()=>{\n        this.btnClicked=false;\n        // this.editableText=true;\n        }, 1000);\n\n        \n  }\n\n  async saveProfile()\n  {\n    \n        console.log(\"profileData : \",this.profileData);\n          this.btnClicked=true;\n            console.log(\"btnClicked : \",this.btnClicked);\n            setTimeout( ()=>{\n              this.btnClicked=false;\n              // this.editableText=true;\n              }, 1000)\n\n          //get token\n          this.token =(await Storage.get({ key: 'accessToken' })).value;\n          //get Language\n          this.lang = (await Storage.get({ key: 'SELECTED LANGUAGE' })).value;\n      \n\n      if(this.profileData.email)\n      {\n        \n              ///start loader\n              this.webService.presentLoading();\n      //////////////////////////////////////////////////////////////////////////////////////////////\n\n        \n                ///////////////call the edit profile API ////\n                this.webService.EditClientProfile(this.userId,this.token,this.profileData).subscribe(res =>{\n        \n                    //stop loader\n                    this.webService.stopLoading();\n                      if(res.detail)\n                      {\n                          if(this.lang==\"fr\")\n                          {\n                            alert(\"La modification a échoué !! \");\n                            // alert(\"Modification réussie avec succès !!\");\n        \n                          }else{\n                            alert(\"Update Failed !\");\n                          }\n        \n                      }else{\n\n                          \n                            //store the new result into userInfos\n                              //store user infos in storage \n                              Storage.set({\n                                key : \"user_infos\",\n                                value : JSON.stringify(res)\n                            });// end store user \n        \n\n                            if(this.lang==\"fr\")\n                            {\n                              alert(\"Modification réussie !!\");\n          \n                            }else{\n                              alert(\"Update Successful !!\");\n                            }\n        \n                            //back to prev page\n                            this.prev();\n        \n                      }\n\n\n\n        \n                },error =>{\n                  this.webService.stopLoading();   \n                    if(this.lang==\"fr\")\n                    {\n                      alert(\"Erreur Serveur, \\n Verifiez Votre connexion internet \\n Et vos Entrees \");\n                    // alert(\"Modification réussie avec succès !!\");\n\n                    }\n                    else\n                    {\n                      alert(\"Server error, \\n please check your internet connection \\n and your inputs\") ;\n                    }            \n\n              });\n              \n\n            ////////////////////////////////////////////////////////////////////////////////////////\n      }\n      else\n      {\n\n            if(this.lang==\"fr\")\n            {\n              alert(\"SVP, Remplissez le champ email !\");\n\n            }\n            else\n            {\n              alert(\"Please, Fill the email field !\") ;\n            }  \n      }\n  \n  }\n\n  prev()\n  {\n    this.editableText = true;\n  }\n\n}\n"]}