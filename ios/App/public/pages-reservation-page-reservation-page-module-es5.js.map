{"version":3,"sources":["webpack:///src/app/pages/reservation-page/reservation-page.page.html","webpack:///src/app/pages/reservation-page/reservation-page-routing.module.ts","webpack:///src/app/pages/reservation-page/reservation-page.module.ts","webpack:///src/app/pages/reservation-page/reservation-page.page.scss","webpack:///src/app/pages/reservation-page/reservation-page.page.ts"],"names":["routes","path","component","ReservationPagePageRoutingModule","imports","forChild","exports","ReservationPagePageModule","declarations","Storage","LNG_KEY","ReservationPagePage","router","route","webservice","alertController","list_original","list_to_show","selected_index","show_list","car","carID","page_prev","rent_type","dataToSend","show","setDate","presentLoading","subscription","queryParams","subscribe","data","console","log","id","prev","getDestinations","res","getOption","resp","option","getCarDetails","getPriceCar","per_day","prix","per_hour","airport","stopLoading","date","Date","month","day","date_location","toISOString","today","getFullYear","getMonth","getDate","start_date","end_date","start_time","end_time","x","maxdate","navigate","destination","voiture","coef","JSON","get","key","value","ret","parse","client","token","split","date_debut","type_location","date_fin","price","index","i","length","checked","parseFloat","optionnel","montant","commentaire_client","message","presentAlertConfirm","lang","alert","text","create","cssClass","header","buttons","role","handler","blah","postReservation","myAlert","error","present","navigateByUrl","type","parseInt","dat","val","toUpperCase","searchQuery","destination_to_be_search","query","k","includes","selector","template"],"mappings":"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","file":"pages-reservation-page-reservation-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n\\n      <ion-item>\\n          <ion-icon color=\\\"light\\\" name=\\\"chevron-back\\\" (click)=\\\"prev()\\\" ></ion-icon>\\n          <ion-title>{{\\\"RESERVECAR.title\\\"| translate}}</ion-title>\\n      </ion-item>  \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"show\\\">\\n\\n\\n\\n\\n\\n       <ion-card>\\n        <ion-card-header>\\n\\n         <ion-card-title > RESERVATION </ion-card-title>\\n              <!-- Label only -->\\n          <ion-segment [(ngModel)]=\\\"rent_type\\\">\\n            <ion-segment-button  value=\\\"hour\\\">\\n              <ion-label>{{\\\"RESERVECAR.per_hour\\\"| translate}} </ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"day\\\">\\n              <ion-label>{{\\\"RESERVECAR.per_day\\\"| translate}}</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"airport\\\">\\n              <label textWrap=\\\"true\\\" style=\\\"font-size:0.9em\\\">{{\\\"RESERVECAR.airport_pick\\\"| translate}}</label>\\n            </ion-segment-button>\\n          </ion-segment>\\n\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n             \\n              <!-- Search Bar -->\\n               <ion-searchbar placeholder=\\\"Destination (*) \\\"[(ngModel)]=\\\"searchQuery\\\" (click)=\\\"click_bar()\\\" (ionCancel)=\\\"onCancel($event)\\\" (ionClear)\\t=\\\"onCancel($event)\\\" (ngModelChange)=\\\"change_query($event)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\n                \\n                <ion-list *ngIf=\\\"show_list\\\">\\n                   <ion-item *ngFor=\\\"let item of list_to_show; let i = index\\\">\\n                       <ion-label (click)=\\\"click_item(i, item.id,item.coefficient)\\\"  > {{item.destination}} </ion-label>\\n                   </ion-item>\\n                </ion-list>\\n\\n\\n                <!-- Price -->\\n\\n                <ion-item>\\n                    <ion-label > {{\\\"RESERVECAR.price\\\"| translate}}</ion-label>\\n                   \\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='day'\\\"> {{car.per_day}} F CFA </ion-chip>\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='hour'\\\"> {{car.per_hour}} F CFA</ion-chip>\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='airport'\\\"> {{car.airport}} F CFA </ion-chip>\\n\\n                </ion-item>\\n\\n            <!-- ----------------------------------------------------------------------------------- -->\\n            <!-- ----------------------START rent type = \\\"per hour\\\"------------------------------- -->\\n              <div *ngIf=\\\"rent_type =='hour'\\\">\\n                <!-- start date -->\\n                <ion-item  >\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\n                  <ion-datetime readonly [min]=\\\"today\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\" ></ion-datetime>\\n                </ion-item>\\n                <!-- start time -->\\n                <ion-item >\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" (ionChange)=\\\"change('hour')\\\"   [(ngModel)]=\\\"start_time\\\" ></ion-datetime>\\n                </ion-item>\\n                 <!-- return time -->\\n                <ion-item  *ngIf=\\\"rent_type =='hour' || rent_type =='day' \\\">\\n                  <ion-label>{{\\\"RESERVECAR.return_time\\\"| translate}}</ion-label>\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\"  [min]=\\\"end_time\\\" [(ngModel)]=\\\"end_time\\\"> </ion-datetime>\\n                </ion-item>\\n               </div>\\n\\n\\n            <!-- ----------------------STOP rent type = \\\"per hour\\\"------------------------------------------------------------------ -->\\n            <!-- ------------------------------------------------------------------------------------------ -->\\n\\n            <!-- ----------------------------------------------------------------------------------- -->\\n            <!-- ----------------------START rent type = \\\"per day\\\"------------------------------- -->\\n              <div *ngIf=\\\"rent_type =='day'\\\">\\n                <!-- start date -->\\n                <ion-item  >\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\n                  <ion-datetime [min]=\\\"today\\\" [max]=\\\"maxdate\\\" (ionChange)=\\\"change('day')\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\"></ion-datetime>\\n                </ion-item>\\n                 <!-- return date  -->\\n                <ion-item  >\\n                  <ion-label>{{\\\"RESERVECAR.return_date\\\"| translate}}</ion-label>\\n                  <ion-datetime [min]=\\\"end_date\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"end_date\\\"></ion-datetime>\\n                </ion-item>\\n                <!-- start time -->\\n                <ion-item >\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" (ionChange)=\\\"end_time = start_time\\\"   [min]=\\\"start_time\\\" [(ngModel)]=\\\"start_time\\\"></ion-datetime>\\n                </ion-item>\\n                 <!-- return time -->\\n                <ion-item >\\n                  <ion-label>{{\\\"RESERVECAR.return_time\\\"| translate}}</ion-label>\\n                  <ion-datetime  display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\"   [(ngModel)]=\\\"end_time\\\"></ion-datetime>\\n                </ion-item>\\n               </div>\\n\\n\\n            <!-- ----------------------STOP rent type = \\\"per day\\\"------------------------------------------------------------------ -->\\n            <!-- ------------------------------------------------------------------------------------------ -->\\n           \\n            <!-- ----------------------------------------------------------------------------------- -->\\n            <!-- ----------------------START rent type = \\\"airport\\\"------------------------------- -->\\n              <div *ngIf=\\\"rent_type =='airport'\\\">\\n                <!-- start date -->\\n                <ion-item  >\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\n                  <ion-datetime [value]=\\\"today\\\" [min]=\\\"today\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\"></ion-datetime>\\n                </ion-item>\\n                <!-- start time -->\\n                <ion-item >\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\\" [(ngModel)]=\\\"start_time\\\" ></ion-datetime>\\n                </ion-item>\\n                 <!-- departure -->\\n                <ion-item  *ngIf=\\\"rent_type =='airport' \\\">\\n                  <ion-input [(ngModel)]= \\\"depart_venue\\\"  placeholder='{{\\\"RESERVECAR.departure_venue\\\"| translate}}' ></ion-input>\\n                </ion-item>\\n\\n                \\n               </div>\\n\\n\\n            <!-- ----------------------STOP rent type = \\\"airport\\\"------------------------------------------------------------------ -->\\n            <!-- ------------------------------------------------------------------------------------------ -->\\n\\n\\n                \\n                \\n\\n        </ion-card-content>\\n      \\n  </ion-card>\\n      \\n      <!-- type of reservation -->\\n\\n\\n  <!-- optional services -->\\n       <ion-card>\\n     \\n        <ion-card-header>\\n          <ion-card-title>{{\\\"RESERVECAR.otherservices\\\"| translate}}  </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content *ngFor=\\\"let item of option\\\">\\n                  \\n                <!-- <strong> <ion-label style=\\\"text-decoration: underline; margin-left:4%\\\"> Optional Services : </ion-label> </strong> -->\\n                  \\n                  <!-- baby seats -->\\n                <ion-item>\\n                    <ion-checkbox color=\\\"primary\\\" [(ngModel)] =\\\"item.checked\\\" slot=\\\"end\\\"></ion-checkbox>\\n                    <label  textWrap=\\\"true\\\">{{item.libelle}}  -   {{item.prix}}F cfa/ {{\\\"RESERVECAR.day\\\"| translate}} </label>\\n                </ion-item>\\n                \\n            \\n        </ion-card-content>\\n        </ion-card>\\n\\n       \\n\\n        <!-- Message -->\\n        <ion-card  style=\\\"height: 255px;\\\">\\n     \\n            <ion-card-header>\\n              <ion-card-title>{{\\\"RESERVECAR.message\\\"| translate}}</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content >\\n                \\n                  <ion-textarea [(ngModel)]=\\\"message\\\" class=\\\"cell-input\\\" auto-grow=\\\"true\\\" maxlength=\\\"400\\\" placeholder=\\\"{{'RESERVECAR.messageplaceholder'| translate}}\\\"></ion-textarea>\\n\\n            </ion-card-content>\\n\\n        </ion-card>\\n\\n           <!-- submit your reservation -->\\n        <!-- <ion-button expand=\\\"round\\\" class=\\\"center-button\\\" >Submit</ion-button> -->\\n\\n\\n</ion-content>\\n<ion-footer *ngIf=\\\"show\\\">\\n  <!-- <ion-toolbar> -->\\n      <ion-button  (click)=\\\"submit(car.id)\\\" expand=\\\"full\\\"> {{\\\"RESERVECAR.btn_submit\\\"| translate}} </ion-button>\\n  <!-- </ion-toolbar> -->\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReservationPagePage } from './reservation-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReservationPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReservationPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReservationPagePageRoutingModule } from './reservation-page-routing.module';\n\nimport { ReservationPagePage } from './reservation-page.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Ng2SearchPipeModule,\n    ReservationPagePageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [ReservationPagePage]\n})\nexport class ReservationPagePageModule {}\n","export default \".center-button {\\n  margin-left: 35%;\\n  margin-right: 30%;\\n}\\n\\n.cell-input {\\n  border-color: black;\\n  border-width: 0.01em;\\n  border-style: solid;\\n  margin-bottom: -1px;\\n}\\n\\nion-card, ion-toolbar, ion-segment {\\n  --background: black;\\n}\\n\\nion-card-title {\\n  margin-left: 30%;\\n}\\n\\nion-item {\\n  --background: black;\\n  color: #ffa60a;\\n}\\n\\nion-chip {\\n  color: black;\\n  --background: white;\\n}\\n\\nion-button {\\n  color: black;\\n  --background: #ffa60a;\\n  border-color: black;\\n}\\n\\nion-segment-button {\\n  color: #ffa60a;\\n}\\n\\nion-card-title, ion-textarea {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jcGNraW5nZG9tL0RvY3VtZW50cy9pb25pYy10dXRvcmlhbC1tYXN0ZXIvaW9uaWNfcHJvamVjdC9sb2dpbkNhcC9sb2dpbkNhcC9zcmMvYXBwL3BhZ2VzL3Jlc2VydmF0aW9uLXBhZ2UvcmVzZXJ2YXRpb24tcGFnZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Jlc2VydmF0aW9uLXBhZ2UvcmVzZXJ2YXRpb24tcGFnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FER0U7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsbUJBQUE7RUFBb0IsbUJBQUE7QUNDeEI7O0FERUU7RUFFRSxtQkFBQTtBQ0FKOztBREVBO0VBRUksZ0JBQUE7QUNBSjs7QURJQTtFQUVJLG1CQUFBO0VBQ0EsY0FBQTtBQ0ZKOztBREtBO0VBRUksWUFBQTtFQUNBLG1CQUFBO0FDSEo7O0FES0E7RUFFSSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtBQ0hKOztBRE1BO0VBRUksY0FBQTtBQ0pKOztBRE9BO0VBRUksWUFBQTtBQ0xKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVzZXJ2YXRpb24tcGFnZS9yZXNlcnZhdGlvbi1wYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXItYnV0dG9ue1xuICAgIG1hcmdpbi1sZWZ0OiAzNSU7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMCU7XG4gIFxuICB9XG5cbiAgLmNlbGwtaW5wdXQge1xuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7IFxuICAgIGJvcmRlci13aWR0aDogLjAxZW07IFxuICAgIGJvcmRlci1zdHlsZTpzb2xpZDsgbWFyZ2luLWJvdHRvbSA6IC0xcHg7XG4gIH1cblxuICBpb24tY2FyZCxpb24tdG9vbGJhcixpb24tc2VnbWVudFxue1xuICAgIC0tYmFja2dyb3VuZDogYmxhY2s7IFxufVxuaW9uLWNhcmQtdGl0bGVcbntcbiAgICBtYXJnaW4tbGVmdDozMCVcbn1cblxuXG5pb24taXRlbVxue1xuICAgIC0tYmFja2dyb3VuZDogYmxhY2s7IFxuICAgIGNvbG9yOiAgI2ZmYTYwYTtcbn1cblxuaW9uLWNoaXBcbntcbiAgICBjb2xvcjogYmxhY2s7IFxuICAgIC0tYmFja2dyb3VuZDogd2hpdGU7XG59XG5pb24tYnV0dG9uXG57XG4gICAgY29sb3I6IGJsYWNrOyBcbiAgICAtLWJhY2tncm91bmQ6ICNmZmE2MGE7XG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcbn1cblxuaW9uLXNlZ21lbnQtYnV0dG9uXG57XG4gICAgY29sb3IgOiAjZmZhNjBhO1xufVxuXG5pb24tY2FyZC10aXRsZSxpb24tdGV4dGFyZWFcbntcbiAgICBjb2xvciA6IHdoaXRlO1xufSIsIi5jZW50ZXItYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDM1JTtcbiAgbWFyZ2luLXJpZ2h0OiAzMCU7XG59XG5cbi5jZWxsLWlucHV0IHtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXdpZHRoOiAwLjAxZW07XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIG1hcmdpbi1ib3R0b206IC0xcHg7XG59XG5cbmlvbi1jYXJkLCBpb24tdG9vbGJhciwgaW9uLXNlZ21lbnQge1xuICAtLWJhY2tncm91bmQ6IGJsYWNrO1xufVxuXG5pb24tY2FyZC10aXRsZSB7XG4gIG1hcmdpbi1sZWZ0OiAzMCU7XG59XG5cbmlvbi1pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiBibGFjaztcbiAgY29sb3I6ICNmZmE2MGE7XG59XG5cbmlvbi1jaGlwIHtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG5pb24tYnV0dG9uIHtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJhY2tncm91bmQ6ICNmZmE2MGE7XG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XG59XG5cbmlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gIGNvbG9yOiAjZmZhNjBhO1xufVxuXG5pb24tY2FyZC10aXRsZSwgaW9uLXRleHRhcmVhIHtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AppServiceService } from 'src/app/service/appService/app-service.service';\nimport { Plugins } from '@capacitor/core';\nimport { AlertController } from '@ionic/angular';\n\n\nconst { Storage } = Plugins;\nconst LNG_KEY = 'SELECTED LANGUAGE'; // this is used to fetch or manipulate the var(containing the selected language) present in the storage\n\n\n\n@Component({\n  selector: 'app-reservation-page',\n  templateUrl: './reservation-page.page.html',\n  styleUrls: ['./reservation-page.page.scss'],\n})\nexport class ReservationPagePage implements OnInit {\n\n //////////////Date////////////////////\n public  today: any ;     // today's date \n public  maxdate : any;   // the maximum date of a date picker\n \n /////////////////////////////////\n //////////////////////////////////////////////////////////////////////\n  ////////////data for destination////////////////////////\n  searchQuery:any;\n  destination_to_be_search : any;\n  list_original = [\n    {\n        'id': '',\n        'destination' :'',\n        'coefficient' : ''\n    }\n  ];\n  list_to_show = [\n    {\n        'id': '',\n        'destination' :'',\n        'coefficient' : ''\n    }\n  ];\n  selected_index = -1;\n  show_list = false;\n  coef : any //coefficient de reservation\n///////////////////////end data for destination search ///////////////////\n  \n\n\n//////////////////////////////////////////////////\n\n//my car : this var will receive the car with all its details\ncar = {\n  'id' : '',\n  'modele' : '',\n  'per_day' : 0,\n  'per_hour' : 0,\n  'airport' : 0\n}\n\n////////option values\noption : any ;\n\nsubscription: Subscription;\n\n  //car ID\n  carID =\"\" \n  //prev page\n  page_prev =\"\" \n  /////////////////////////////////////\n   ////var data to be sent //////////\n   rent_type : any =\"hour\";\n   destination : any;\n   price : any;\n   start_date : string;\n   start_time : string;\n   end_date : string;\n   end_time : string;\n   depart_venue : string;\n   message : string;\n  \n\n   ////////////////////////////////////////////////////////\n\n   \n   //this is the object we have to send to the API\n   dataToSend = {\n      \"date_location\": \"\",\n      \"date_debut\": \"\",\n      \"date_fin\": \"\",\n      //\"heure_debut\": \"\",\n      //\"heure_fin\": \"\",\n      \"montant\": 0,\n      \"note_client\": 0,\n      \"commentaire_client\": \"\",\n      \"note_chauffeur\": 0,\n      \"rapport_chauffeur\": \"\",\n      \"client\": 0,\n      \"chauffeur\": 1,\n      \"voiture\": 0,\n      \"type_location\": 1,\n      \"destination\": 0,\n      \"etape_location\": 1,\n      //\"lieu_depart\": \"\",\n      \"optionnel\": [\n        0\n      ]\n    \n   }//end of object to send\n   ///////////////////////////////\n\n   token : any\n\n/////////////////////////////////////////////////////\n   show = false; //is to show page content\n \n\n\n  constructor( private router : Router, private route: ActivatedRoute, \n                private webservice : AppServiceService,\n                public alertController: AlertController) { \n\n      // date\n      this.setDate();\n      \n  }\n\n  ngOnInit() {\n\n        // //present loading\n        this.webservice.presentLoading();\n\n        ////////////////////////////////////////////////////////////////\n        ///////////////receive car id/////////////////////////////////////////////////\n        this.subscription = this.route.queryParams.subscribe((data) => {\n                \n              console.log(\"selected ->\", typeof(data.id))\n\n            //set the prev page\n            this.page_prev = data.prev\n            //set the Car ID \n            this.carID = data.id\n\n\n               ////////////////////////////////////////////////////////////////////////////   \n      //get Destination list\n\n      this.webservice.getDestinations().subscribe(async res=>{\n            console.log(\"getting Destinations : \",res); \n            if(res)\n            {\n                this.list_original = res;\n                \n            }\n\n\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        ////////////////////////Start : Get Optionnels/////////////////////////////////////////////////\n                this.webservice.getOption().subscribe(resp =>{\n\n                  this.option = resp;\n                  console.log(resp)\n\n                ///////////////////////////////////////////////////////////////////////////////////////////\n                //////////////////Start : Get Car details/////////////////////////////////////////////////\n                  this.webservice.getCarDetails(data.id).subscribe(res =>{\n\n                      this.car = res;\n\n                    // get the differents pice of the car\n                    this.webservice.getPriceCar(data.id).subscribe( resp =>{\n\n                      this.car.per_day = resp[0].prix;\n                      this.car.per_hour = resp[1].prix;\n                      this.car.airport = resp[2].prix;\n\n                      //stop loading\n                    this.webservice.stopLoading();\n                      this.show = true;\n\n                    }); //end get prices\n\n\n                      console.log(res)\n                  }) ;\n                //////////////////Stop : Get Car details//////////////////////////////////////////////////\n                /////////////////////////////////////////////////////////////////////////////////////////\n                \n                              \n                  }) ;\n        //////////////////////////Stop : Get  Optionnels//////////////////////////////////////////////////\n                /////////////////////////////////////////////////////////////////////////////////////////\n       \n              }); //// end get destinations\n        ////////////////////////////////////////////////////////////////////\n            \n\n        });\n\n    }\n\n\n////////////////////////////////////////////////////////////////////////////////    \n    setDate()\n    {\n      let date : Date = new Date();\n      var month, day\n\n       ///////////////////////today's date or reservation date //////////////////////////\n       this.dataToSend.date_location = date.toISOString();\n\n      //today's date\n      this.today = date.getFullYear() +\"-\"+ (date.getMonth()+1) + \"-\"+date.getDate();\n    \n         if(date.getMonth()+1 <10)\n         {\n           month = \"0\"+(date.getMonth()+1)\n         }else{\n           month = date.getMonth()+1\n         }\n    \n         if(date.getDate() <10)\n         {\n           day = \"0\"+date.getDate()\n         }else{\n           day = date.getDate()\n         }\n    \n         this.today = date.getFullYear() +\"-\"+ month + \"-\"+day\n\n         this.start_date = this.today;\n         this.end_date = this.start_date;\n         this.start_time = \"09:00\";\n         this.end_time = \"10:00\";\n    \n    \n      //maximum date\n      var x =  new Date().setDate( date.getDate()+90 )\n      this.maxdate = new Date(x)\n    \n      if(this.maxdate.getMonth()+1 <10)\n      {\n        month = \"0\"+(this.maxdate.getMonth()+1)\n      }else{\n         month = this.maxdate.getMonth()+1\n      }\n    \n      if(this.maxdate.getDate() <10)\n      {\n        day = \"0\"+this.maxdate.getDate()\n      }else{\n        day = this.maxdate.getDate()\n      }\n    \n      this.maxdate = this.maxdate.getFullYear() +\"-\"+ month + \"-\"+day\n      \n    \n    \n      console.log(\"Today = \" + this.today + \" \\n MAX DATE : \"+ this.maxdate); \n    \n    \n    \n    } \n\n  //////////////////////////////////////////////////////////////\n  ////back to prev ///\n\n  prev(){\n\n    //call another page and make the reservation of the car\n    this.router.navigate(['car-details'], {queryParams:{id: this.carID, prev : this.page_prev }})\n  }\n\n\n\n////////////////////////////////////////////////////////////////////////\n/////////////////Submit reservation///////////////////////////////////////////////////////\n    async submit(id)\n    {\n\n        //check if destination is null\n        if(this.destination)\n        {\n\n\n          //////////////////////////car id ///////////////////////////////////////////////\n            this.dataToSend.voiture = id;   \n\n            console.log(\"id : \",id,\"\\n coef : \",this.coef)\n        \n          /////////////////////////////////user id ///////////////////////////////////////////////  \n      \n             var ret =JSON.parse( (await Storage.get({ key: \"user_infos\" })).value);\n            // console.log(\"user : \", ret);\n             this.dataToSend.client = ret.id;\n        \n          //////////////////////////////get token storage////////////////////////////////////////\n            this.token =(await Storage.get({ key: 'accessToken' })).value;\n            console.log(\"Token : \", this.token);\n\n            /////////////////// set start date /////////////////////////////////////////////////////\n            //this.dataToSend.date_debut = this.start_date\n            this.start_date = this.start_date.split(\"T\")[0]  ;     \n            this.dataToSend.date_debut = this.start_date + \"T\"+this.start_time+\":44.625Z\" ;     \n            //////////////////// set start hour /////////////////////////////////////////////////////\n          // this.dataToSend.heure_debut = this.start_time;     \n        \n\n          ///////////////////////////////////////////////////////////////////////////////////////////\n          if(this.rent_type ==\"hour\")\n          {\n            ///////set type rent to hour id \n            this.dataToSend.type_location = 1;\n            /////////////////// set end hour /////////////////////////////////////////////////////\n          //this.dataToSend.heure_fin = this.end_time;\n            /////// set the end date to \"\";\n            this.dataToSend.date_fin = this.start_date+\"T\"+this.end_time+\":44.625Z\" ; \n            //this.dataToSend.date_fin = \"\"+ \" \"+this.end_time;\n            /////// set depart venue  (for airoort type)\n            //this.dataToSend.lieu_depart = \"\";\n\n            this.price =   this.car.per_hour * (1+ this.coef  )\n            \n          }\n          else if(this.rent_type ==\"day\")\n          {\n\n            ///////set type rent to day id \n            this.dataToSend.type_location = 2;\n            //////////////////////set end date ///////////////////////////////////////////////////////\n            // this.dataToSend.date_fin = this.end_date\n            this.end_date = this.end_date.split(\"T\")[0] ;\n            this.dataToSend.date_fin = this.end_date+\"T\"+this.end_time+\":44.625Z\" ;\n            /////////////////// set end hour /////////////////////////////////////////////////////\n            // this.dataToSend.heure_fin = this.end_time;\n            /////// set depart venue \n            //this.dataToSend.lieu_depart = \"\";\n\n            this.price = this.car.per_day * (1+ this.coef) \n\n          }\n          else if(this.rent_type ==\"airport\")\n          {\n            ///////set type rent to airport id \n            this.dataToSend.type_location = 3;\n            this.dataToSend.date_fin = this.start_date+\"T\"+this.start_time+\":44.625Z\" \n            /// set end time /////////////////////////\n            this.dataToSend.date_fin = \"\"+ \" \"+this.end_time+\"T\"+this.start_time+\":44.625Z\";\n            //////////////////////set departure venue ///////////////////////////////////////////////////////\n            //this.dataToSend.lieu_depart = this.depart_venue;\n\n            this.price = this.car.airport * (1+ this.coef) \n\n          }\n          ///////////////////////////////////////////////////////////////////////////////////////////////////\n        \n\n          //////////////////////////////////////////////////////////////////////////////////////////////////\n          ////////////////////////////get the selected option and add price /////////////////////////////////////\n          var index = 0 ;\n          for(let i=0 ; i<this.option.length ; i++)\n          {\n              if(this.option[i].checked)\n              {\n                ////////////////////////////////////////////////////////////////////\n                  if(this.rent_type ==\"hour\")\n                  {\n                    console.log(\"price : \",typeof(this.price),\"\\n option price : \", typeof(this.option[i].prix))\n                    \n                    this.price = parseFloat(this.price) + this.option[i].prix;\n                    //add the optionnel id into the dataTosend field array\n                    this.dataToSend.optionnel[index] = this.option[i].id;\n                    index = index+1;\n                  \n                  }\n                  else if(this.rent_type ==\"day\")\n                  {\n                    this.price = this.price + this.option[i].prix;\n                    //add the optionnel id into the dataTosend field array\n                    this.dataToSend.optionnel[index] = this.option[i].id;\n                    index = index+1;\n\n                  }\n                  else if(this.rent_type ==\"airport\")\n                  {\n                    this.price =  this.price + this.option[i].prix;\n                    //add the optionnel id into the dataTosend field array\n                    this.dataToSend.optionnel[index] = this.option[i].id;\n                    index = index+1;\n            \n\n                  }\n                  //////////////////////////////////////////////////////////////\n                \n                  console.log(this.option[i]);\n              }\n          }\n\n          //////////////////set destination ////////////////////////////////////////////\n          this.dataToSend.destination = this.destination\n\n          /////////////////////set price ///////////////////////////////////////////////////\n          this.dataToSend.montant = this.price;\n          \n          /////////////////////set commentaire client ///////////////////////////////////////////////////\n          this.dataToSend.commentaire_client = this.message;\n          \n\n          console.log(\"\\n data to send : \\n\", this.dataToSend);\n\n          // present alert\n              this.presentAlertConfirm(this.price,this.start_date,this.end_date)\n        }\n        else\n        {\n          var lang = (await Storage.get({ key: LNG_KEY })).value;\n          if(lang ==\"fr\")\n          {\n            alert(\"Remplissez le champ Destination !\");\n          }else{\n            alert(\"Fill the Destination Field !\")\n          }\n            \n        }\n\n   \n   \n    }\n\n    ////// present Confirmation alert///////////\n    \n      // present alert\n      async presentAlertConfirm(price, start_date , end_date) {\n\n        var lang = (await Storage.get({ key: LNG_KEY })).value;\n        if(lang ==\"fr\")\n        {\n          var text = \"Prix Total : \";\n        }else{\n          var text = \"Total Price : \";\n        }\n\n        const alert = await this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Validation!!',\n          message: '<strong>'+text +'</strong>' + price + ' F CFA',\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: (blah) => {\n                console.log('Confirm Cancel: blah');\n              }\n            }, {\n              text: 'Okay',\n              handler: () => {\n                console.log('Confirm Okay');\n\n                 ////send the data to the API\n                this.webservice.postReservation(this.token, this.dataToSend).subscribe(res=>{\n                      console.log(res)\n                      if(res)\n                      {\n                         console.log(\"done\");\n                         this.myAlert(0,lang);     \n\n\n                      }\n\n                },error =>{\n                  console.log(\"error : \\n\",error); \n                     this.myAlert(1,lang);     \n                 }\n                );\n\n\n\n              }\n            }\n          ]\n        });\n    \n        await alert.present();\n      } \n\n    //alert 2 method\n   myAlert(id,lang)\n   {\n     if(id==0)\n     {\n        if(lang ==\"fr\" )\n        {\n           alert( \"Votre Requête a été envoyée avec succès !\");\n        }else{\n          alert(\"Your Request has been sent successfully !\");\n         }\n         this.router.navigateByUrl(\"/dashboard\");\n     }else{\n\n        if(lang ==\"fr\" )\n        {\n          alert( \"Désolé, une erreur s'est produite, veuillez vérifier à nouveau votre saisie.\");\n        }else{\n          alert(\"Sorry, an error has occurred please, check your entry again.\");\n        }\n\n     }\n   }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////change end time\nchange(type)\n{\n   ////per hour\n   if(type == \"hour\")\n   {\n       // console.log(\"start : \",this.start_time,\"\\n type time :\",typeof(this.start_time));\n        var x = parseInt(this.start_time.split(\":\")[0]) + 1;\n\n        if(x<10)\n        {\n          this.end_time = \"0\"+x+\":00\";\n        }else{\n          this.end_time = \"\"+x+\":00\";\n        }\n       \n   }\n   ////per day\n   if(type == \"day\")\n   {\n       // console.log(\"start : \",this.start_date,\"\\n type time :\",typeof(this.start_date));\n        var dat = this.start_date.split(\"T\")[0];\n        var x = parseInt(dat.split(\"-\")[2])+1;\n        if(x<10)\n        {\n          this.end_date = \"\"+dat.split(\"-\")[0]+\"-\"+dat.split(\"-\")[1]+\"-0\"+x;\n        }\n        else\n        {\n          this.end_date = \"\"+dat.split(\"-\")[0]+\"-\"+dat.split(\"-\")[1]+\"-\"+x;\n        }\n\n        //console.log(this.end_date);\n       \n       \n   }\n}\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  ///////////////////////Search methods //////////////////////////////\n  onCancel(val) {\n    this.show_list = false;\n    this.list_to_show = [\n      {\n          'id': '',\n          'destination' :'',\n          'coefficient' : ''\n      }\n    ];\n\n  }\n\n  click_bar() {\n    this.list_to_show = [\n      {\n          'id': '',\n          'destination' :'',\n          'coefficient' : ''\n      }\n    ];\n    this.show_list = true;\n  }\n\n  click_item(val, id,coef)\n  {\n       \n        //set destination\n        this.destination = id;\n        //set coef \n        this.coef = parseFloat(coef);\n\n        for (let i = 0 ; i < this.list_original.length; i++)\n        {\n            if (this.list_to_show[val].destination.toUpperCase() === this.list_original[i].destination.toUpperCase()) {\n                this.selected_index = i;\n\n                //print the selected destination\n                this.searchQuery = this.list_to_show[val].destination;\n\n                // set the destinatination to be search\n                this.destination_to_be_search  = this.list_to_show[val];\n\n                break;\n            }\n        }\n        this.show_list = false;\n  }\n\n  change_query(query)\n  {\n  \n            let k = 0;\n            this. list_to_show = [\n              {\n                  'id': '',\n                  'destination' :'',\n                  'coefficient' : ''\n              }\n            ];\n            for (let i = 0 ; i < this.list_original.length; i++)\n            {\n                if (this.list_original[i].destination.toUpperCase().includes(query.toUpperCase()))\n                {\n                    this.list_to_show[k] =  this.list_original[i];\n                    k += 1;\n                }\n            }\n    \n  }\n\n\n\n\n}\n"]}