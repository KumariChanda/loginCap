{"version":3,"sources":["webpack:///src/app/pages/reservation-page/reservation-page.page.html","webpack:///src/app/pages/reservation-page/reservation-page-routing.module.ts","webpack:///src/app/pages/reservation-page/reservation-page.module.ts","webpack:///src/app/pages/reservation-page/reservation-page.page.scss","webpack:///src/app/pages/reservation-page/reservation-page.page.ts"],"names":["routes","path","component","ReservationPagePageRoutingModule","imports","forChild","exports","ReservationPagePageModule","declarations","Storage","LNG_KEY","ReservationPagePage","router","route","webservice","alertController","list_original","list_original1","list_to_show","list_to_show1","selected_index","show_list1","show_list","car","carID","page_prev","rent_type","hourNbr","dataToSend","show","setDate","get","key","lang","value","presentLoading","subscription","queryParams","subscribe","data","prev","id","getDestinations","res","getOption","resp","option","getCarDetails","getPriceCar","i","length","type_location","per_day","prix","per_hour","airport","stopLoading","date","Date","month","day","min_retunDate","getDate","toISOString","date_location","today","getFullYear","getMonth","start_date","end_date","start_time","end_time","x","maxdate","navigate","destination","voiture","JSON","ret","parse","client","token","split","date_debut","date_fin","price","coef","alert","date1","date2","Difference_In_Time","getTime","Difference_In_Days","depart_venue","depart","c","coef1","index","checked","parseFloat","optionnel","montant","message","presentAlertConfirm","text","textcancel","textok","create","cssClass","header","buttons","role","handler","blah","postReservation","myAlert","error","present","type","parseInt","y","val","toUpperCase","searchQuery1","depart_to_be_search","searchQuery","destination_to_be_search","query","k","includes","selector","template"],"mappings":"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","file":"pages-reservation-page-reservation-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n      <ion-item>\\r\\n          <ion-icon color=\\\"light\\\" name=\\\"chevron-back\\\" (click)=\\\"prev()\\\" ></ion-icon>\\r\\n          <ion-title style=\\\"margin-left:15%\\\">{{\\\"RESERVECAR.title\\\"| translate}}</ion-title>\\r\\n      </ion-item>  \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"show\\\">\\r\\n\\r\\n\\r\\n\\r\\n       <ion-card>\\r\\n        <ion-card-header>\\r\\n\\r\\n         <ion-card-title style=\\\"margin-left:28%\\\" > RESERVATION </ion-card-title>\\r\\n              <!-- Label only -->\\r\\n          <ion-segment [(ngModel)]=\\\"rent_type\\\">\\r\\n\\r\\n            <ion-segment-button value=\\\"day\\\">\\r\\n              <ion-label>{{\\\"RESERVECAR.per_day\\\"| translate}}</ion-label>\\r\\n            </ion-segment-button>\\r\\n\\r\\n            <ion-segment-button  value=\\\"hour\\\">\\r\\n              <ion-label>{{\\\"RESERVECAR.per_hour\\\"| translate}} </ion-label>\\r\\n            </ion-segment-button>\\r\\n            \\r\\n            <ion-segment-button value=\\\"airport\\\">\\r\\n              <label textWrap=\\\"true\\\" style=\\\"font-size:0.9em\\\">{{\\\"RESERVECAR.airport_pick\\\"| translate}}</label>\\r\\n            </ion-segment-button>\\r\\n          </ion-segment>\\r\\n\\r\\n        </ion-card-header>\\r\\n\\r\\n        <ion-card-content>\\r\\n             \\r\\n              \\r\\n\\r\\n            <!-- ----------------------------------------------------------------------------------- -->\\r\\n            <!-- ----------------------START rent type = \\\"per hour\\\"------------------------------- -->\\r\\n              <div *ngIf=\\\"rent_type =='hour' && car.per_hour\\\">\\r\\n\\r\\n                <!-- Search Bar -->\\r\\n                  <ion-searchbar placeholder=\\\"Destination (*) \\\"[(ngModel)]=\\\"searchQuery\\\" (click)=\\\"click_bar(1)\\\" (ionCancel)=\\\"onCancel($event,1)\\\" (ionClear)\\t=\\\"onCancel($event,1)\\\" (ngModelChange)=\\\"change_query($event,1)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\r\\n                \\r\\n                    <ion-list *ngIf=\\\"show_list\\\">\\r\\n                      <ion-item *ngFor=\\\"let item of list_to_show; let i = index\\\">\\r\\n                          <ion-label (click)=\\\"click_item(i, item.id,item.coefficient,1)\\\"  > {{item.destination}} </ion-label>\\r\\n                      </ion-item>\\r\\n                    </ion-list>\\r\\n\\r\\n\\r\\n\\r\\n                <!-- Price -->\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label > {{\\\"RESERVECAR.price\\\"| translate}}</ion-label>\\r\\n                   \\r\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='hour' && car.per_hour\\\"> {{car.per_hour}} F CFA</ion-chip>\\r\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='hour' && !car.per_hour\\\"> Service Not Available </ion-chip>\\r\\n                    \\r\\n                </ion-item>\\r\\n\\r\\n                <!-- start date -->\\r\\n                <ion-item  >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime readonly [min]=\\\"today\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\" ></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- start time -->\\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\">\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" (ionChange)=\\\"change('hour')\\\"   [(ngModel)]=\\\"start_time\\\" ></ion-datetime>\\r\\n                </ion-item>\\r\\n                <ion-item *ngIf=\\\"lang=='fr'\\\">\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\"\\r\\n                   (ionChange)=\\\"change('hour')\\\"   [(ngModel)]=\\\"start_time\\\"\\r\\n                   cancelText=\\\"Annuler\\\"\\r\\n                   doneText=\\\"Valider\\\" ></ion-datetime>\\r\\n                </ion-item>\\r\\n                 <!-- return time -->\\r\\n                <ion-item  *ngIf=\\\"hourNbr > 0\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.return_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime readonly display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\"  [min]=\\\"end_time\\\" [(ngModel)]=\\\"end_time\\\"> </ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- Number of Time-->\\r\\n                <ion-item >\\r\\n                  <ion-label>{{\\\"RESERVECAR.number_hour\\\"| translate}}</ion-label>\\r\\n                  <ion-input type=\\\"number\\\"  style=\\\"width: 100px; margin-left : 40%\\\" (ionChange)=\\\"change('hour')\\\"  placeholder=\\\"0\\\"  [(ngModel)]=\\\"hourNbr\\\" ></ion-input>\\r\\n                </ion-item>\\r\\n                <!-- ----------------French version ------------------------------------------->\\r\\n              \\r\\n                \\r\\n               </div>\\r\\n\\r\\n              <!-- return a message if this service is not Available -->\\r\\n              <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='hour' && !car.per_hour\\\"> {{\\\"RESERVECAR.not_avail\\\"| translate}} </ion-chip>\\r\\n\\r\\n            <!-- ----------------------STOP rent type = \\\"per hour\\\"------------------------------------------------------------------ -->\\r\\n            <!-- ------------------------------------------------------------------------------------------ -->\\r\\n\\r\\n            <!-- ----------------------------------------------------------------------------------- -->\\r\\n            <!-- ----------------------START rent type = \\\"per day\\\"------------------------------- -->\\r\\n              <div *ngIf=\\\"rent_type =='day' && car.per_day\\\">\\r\\n\\r\\n\\r\\n               <!-- Search Bar -->\\r\\n               <ion-searchbar placeholder=\\\"Destination (*) \\\"[(ngModel)]=\\\"searchQuery\\\" (click)=\\\"click_bar(1)\\\" (ionCancel)=\\\"onCancel($event,1)\\\" (ionClear)\\t=\\\"onCancel($event,1)\\\" (ngModelChange)=\\\"change_query($event,1)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\r\\n                \\r\\n                <ion-list *ngIf=\\\"show_list\\\">\\r\\n                   <ion-item *ngFor=\\\"let item of list_to_show; let i = index\\\">\\r\\n                       <ion-label (click)=\\\"click_item(i, item.id,item.coefficient,1)\\\"  > {{item.destination}} </ion-label>\\r\\n                   </ion-item>\\r\\n                </ion-list>\\r\\n\\r\\n\\r\\n\\r\\n                <!-- Price -->\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label > {{\\\"RESERVECAR.price\\\"| translate}}</ion-label>\\r\\n                   \\r\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='day' && car.per_day\\\"> {{car.per_day}} F CFA </ion-chip>\\r\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='day' && !car.per_day\\\"> Service Not Available </ion-chip>\\r\\n                   \\r\\n                </ion-item>\\r\\n                <!-- start date -->\\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime [min]=\\\"today\\\" [max]=\\\"maxdate\\\" (ionChange)=\\\"change('day')\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                 <!-- return date  -->\\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\"  >\\r\\n                  <ion-label>{{\\\"RESERVECAR.return_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime [min]=\\\"min_retunDate\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"end_date\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- start time -->\\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" (ionChange)=\\\"end_time = start_time\\\"   [min]=\\\"start_time\\\" [(ngModel)]=\\\"start_time\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                 <!-- return time -->\\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\">\\r\\n                  <ion-label>{{\\\"RESERVECAR.return_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime  display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\"   [(ngModel)]=\\\"end_time\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- ------------------------french version ----------------------------------------- -->\\r\\n                  <ion-item *ngIf=\\\"lang=='fr'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime [min]=\\\"today\\\" [max]=\\\"maxdate\\\" (ionChange)=\\\"change('day')\\\" \\r\\n                    placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\"\\r\\n                    cancelText=\\\"Annuler\\\"\\r\\n                   doneText=\\\"Valider\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                 <!-- return date  -->\\r\\n                <ion-item *ngIf=\\\"lang=='fr'\\\"  >\\r\\n                  <ion-label>{{\\\"RESERVECAR.return_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime [min]=\\\"min_retunDate\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\" \\r\\n                  [(ngModel)]=\\\"end_date\\\"\\r\\n                  cancelText=\\\"Annuler\\\"\\r\\n                   doneText=\\\"Valider\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- start time -->\\r\\n                <ion-item *ngIf=\\\"lang=='fr'\\\">\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" \\r\\n                  (ionChange)=\\\"end_time = start_time\\\"   [min]=\\\"start_time\\\" [(ngModel)]=\\\"start_time\\\"\\r\\n                  cancelText=\\\"Annuler\\\"\\r\\n                   doneText=\\\"Valider\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                 <!-- return time -->\\r\\n                <ion-item *ngIf=\\\"lang=='fr'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.return_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime  display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" \\r\\n                    [(ngModel)]=\\\"end_time\\\"\\r\\n                    cancelText=\\\"Annuler\\\"\\r\\n                   doneText=\\\"Valider\\\" ></ion-datetime>\\r\\n                </ion-item>     \\r\\n\\r\\n\\r\\n\\r\\n               </div>\\r\\n\\r\\n              <!-- return a message if this service is not Available -->\\r\\n              <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='day' && !car.per_day\\\"> {{\\\"RESERVECAR.not_avail\\\"| translate}} </ion-chip>\\r\\n\\r\\n\\r\\n            <!-- ----------------------STOP rent type = \\\"per day\\\"------------------------------------------------------------------ -->\\r\\n            <!-- ------------------------------------------------------------------------------------------ -->\\r\\n           \\r\\n            <!-- ----------------------------------------------------------------------------------- -->\\r\\n            <!-- ----------------------START rent type = \\\"airport\\\"------------------------------- -->\\r\\n              <div *ngIf=\\\"rent_type =='airport' && car.airport\\\">\\r\\n\\r\\n                <!-- Search Bar Departure venue -->\\r\\n               <ion-searchbar placeholder=\\\"{{'RESERVECAR.departure_venue'| translate}} \\\"[(ngModel)]=\\\"searchQuery1\\\" (click)=\\\"click_bar(0)\\\" (ionCancel)=\\\"onCancel($event,0)\\\" (ionClear)\\t=\\\"onCancel($event,0)\\\" (ngModelChange)=\\\"change_query($event,0)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\r\\n                \\r\\n                <ion-list *ngIf=\\\"show_list1\\\">\\r\\n                   <ion-item *ngFor=\\\"let item of list_to_show1; let i = index\\\">\\r\\n                       <ion-label (click)=\\\"click_item(i, item.id,item.coefficient,0)\\\"  > {{item.destination}} </ion-label>\\r\\n                   </ion-item>\\r\\n                </ion-list>\\r\\n                <!-- Search Bar Destination -->\\r\\n               <ion-searchbar placeholder=\\\"Destination (*) \\\"[(ngModel)]=\\\"searchQuery\\\" (click)=\\\"click_bar(1)\\\" (ionCancel)=\\\"onCancel($event,1)\\\" (ionClear)\\t=\\\"onCancel($event,1)\\\" (ngModelChange)=\\\"change_query($event,1)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\r\\n                \\r\\n                <ion-list *ngIf=\\\"show_list\\\">\\r\\n                   <ion-item *ngFor=\\\"let item of list_to_show; let i = index\\\">\\r\\n                       <ion-label (click)=\\\"click_item(i, item.id,item.coefficient,1)\\\"  > {{item.destination}} </ion-label>\\r\\n                   </ion-item>\\r\\n                </ion-list>\\r\\n\\r\\n                <!-- departure -->\\r\\n                <!-- <ion-item  *ngIf=\\\"rent_type =='airport' \\\">\\r\\n                  <ion-input [(ngModel)]= \\\"depart_venue\\\"  placeholder='{{\\\"RESERVECAR.departure_venue\\\"| translate}}' ></ion-input>\\r\\n                </ion-item> -->\\r\\n\\r\\n\\r\\n                <!-- Price -->\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label > {{\\\"RESERVECAR.price\\\"| translate}}</ion-label>\\r\\n                   \\r\\n                   <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='airport' && car.airport\\\"> {{car.airport}} F CFA </ion-chip>\\r\\n                    <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='airport' && !car.airport\\\"> Service Not Available </ion-chip>\\r\\n\\r\\n                </ion-item>\\r\\n\\r\\n                <!-- start date -->\\r\\n                <ion-item *ngIf=\\\"lang=='fr'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime [value]=\\\"today\\\" [min]=\\\"today\\\" [max]=\\\"maxdate\\\"\\r\\n                   placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\"\\r\\n                   monthShortNames=\\\"Jan, Fev, Mars, Avr, Mai, Juin, Juil, Août, Sep, Oct, Nov, Dec\\\"\\r\\n                   cancelText=\\\"Annuler\\\"\\r\\n                  doneText=\\\"Valider\\\">\\r\\n                 </ion-datetime>\\r\\n                  \\r\\n                </ion-item>\\r\\n                <!-- start date in english --> \\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_date\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime [value]=\\\"today\\\" [min]=\\\"today\\\" [max]=\\\"maxdate\\\"\\r\\n                   placeholder=\\\"Select Date\\\" [(ngModel)]=\\\"start_date\\\">\\r\\n                  </ion-datetime>\\r\\n                  \\r\\n                </ion-item>\\r\\n\\r\\n\\r\\n            \\r\\n\\r\\n                <!-- start time in french  -->\\r\\n                <ion-item *ngIf=\\\"lang=='fr'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\\"\\r\\n                   [(ngModel)]=\\\"start_time\\\"\\r\\n                   cancelText=\\\"Annuler\\\"\\r\\n                   doneText=\\\"Valider\\\" ></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- start time in english-->\\r\\n                <ion-item *ngIf=\\\"lang=='en'\\\" >\\r\\n                  <ion-label>{{\\\"RESERVECAR.start_time\\\"| translate}}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\\" [(ngModel)]=\\\"start_time\\\" ></ion-datetime>\\r\\n                </ion-item>\\r\\n                 \\r\\n\\r\\n                \\r\\n               </div>\\r\\n\\r\\n                  <!-- return a message if this service is not Available -->\\r\\n              <ion-chip slot=\\\"end\\\"    *ngIf=\\\"rent_type =='airport' && !car.airport\\\"> {{\\\"RESERVECAR.not_avail\\\"| translate}} </ion-chip>\\r\\n\\r\\n\\r\\n            <!-- ----------------------STOP rent type = \\\"airport\\\"------------------------------------------------------------------ -->\\r\\n            <!-- ------------------------------------------------------------------------------------------ -->\\r\\n\\r\\n\\r\\n                \\r\\n                \\r\\n\\r\\n        </ion-card-content>\\r\\n      \\r\\n  </ion-card>\\r\\n      \\r\\n      <!-- type of reservation -->\\r\\n\\r\\n\\r\\n  <!-- optional services -->\\r\\n       <ion-card>\\r\\n     \\r\\n        <ion-card-header>\\r\\n          <ion-card-title style=\\\"margin-left:20%\\\">{{\\\"RESERVECAR.otherservices\\\"| translate}}  </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content *ngFor=\\\"let item of option\\\">\\r\\n                  \\r\\n                <!-- <strong> <ion-label style=\\\"text-decoration: underline; margin-left:4%\\\"> Optional Services : </ion-label> </strong> -->\\r\\n                  \\r\\n                  <!-- baby seats -->\\r\\n                <ion-item>\\r\\n                    <ion-checkbox color=\\\"primary\\\" [(ngModel)] =\\\"item.checked\\\" slot=\\\"end\\\"></ion-checkbox>\\r\\n                    <label  textWrap=\\\"true\\\">{{item.libelle}}  -   {{item.prix}}F cfa/ {{\\\"RESERVECAR.day\\\"| translate}} </label>\\r\\n                </ion-item>\\r\\n                \\r\\n            \\r\\n        </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n       \\r\\n\\r\\n        <!-- Message -->\\r\\n        <ion-card  style=\\\"height: 255px;\\\">\\r\\n     \\r\\n            <ion-card-header>\\r\\n              <ion-card-title style=\\\"margin-left:32%\\\">{{\\\"RESERVECAR.message\\\"| translate}}</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content >\\r\\n                \\r\\n                  <ion-textarea [(ngModel)]=\\\"message\\\" class=\\\"cell-input\\\" auto-grow=\\\"true\\\" maxlength=\\\"400\\\" placeholder=\\\"{{'RESERVECAR.messageplaceholder'| translate}}\\\"></ion-textarea>\\r\\n\\r\\n            </ion-card-content>\\r\\n\\r\\n        </ion-card>\\r\\n\\r\\n           <!-- submit your reservation -->\\r\\n        <!-- <ion-button expand=\\\"round\\\" class=\\\"center-button\\\" >Submit</ion-button> -->\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<ion-footer *ngIf=\\\"show\\\">\\r\\n  <!-- <ion-toolbar> -->\\r\\n      <ion-button  (click)=\\\"submit(car.id)\\\" expand=\\\"full\\\"> {{\\\"RESERVECAR.btn_submit\\\"| translate}} </ion-button>\\r\\n  <!-- </ion-toolbar> -->\\r\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReservationPagePage } from './reservation-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReservationPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReservationPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReservationPagePageRoutingModule } from './reservation-page-routing.module';\n\nimport { ReservationPagePage } from './reservation-page.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Ng2SearchPipeModule,\n    ReservationPagePageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [ReservationPagePage]\n})\nexport class ReservationPagePageModule {}\n","export default \".center-button {\\n  margin-left: 35%;\\n  margin-right: 30%;\\n}\\n\\n.cell-input {\\n  border-color: black;\\n  border-width: 0.01em;\\n  border-style: solid;\\n  margin-bottom: -1px;\\n}\\n\\nion-card, ion-toolbar, ion-segment {\\n  --background: black;\\n}\\n\\nion-item {\\n  --background: black;\\n  color: #ffa60a;\\n}\\n\\nion-chip {\\n  color: black;\\n  --background: white;\\n}\\n\\nion-button {\\n  color: black;\\n  --background: #ffa60a;\\n  border-color: black;\\n}\\n\\nion-segment-button {\\n  color: #ffa60a;\\n}\\n\\nion-card-title, ion-textarea {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVzZXJ2YXRpb24tcGFnZS9EOlxcaW9uaWNhcHBcXGxvZ2luQ2FwL3NyY1xcYXBwXFxwYWdlc1xccmVzZXJ2YXRpb24tcGFnZVxccmVzZXJ2YXRpb24tcGFnZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Jlc2VydmF0aW9uLXBhZ2UvcmVzZXJ2YXRpb24tcGFnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FER0U7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsbUJBQUE7RUFBb0IsbUJBQUE7QUNDeEI7O0FERUU7RUFFRSxtQkFBQTtBQ0FKOztBRFFBO0VBRUksbUJBQUE7RUFDQSxjQUFBO0FDTko7O0FEU0E7RUFFSSxZQUFBO0VBQ0EsbUJBQUE7QUNQSjs7QURTQTtFQUVJLFlBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FDUEo7O0FEVUE7RUFFSSxjQUFBO0FDUko7O0FEV0E7RUFFSSxZQUFBO0FDVEoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZXNlcnZhdGlvbi1wYWdlL3Jlc2VydmF0aW9uLXBhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbnRlci1idXR0b257XHJcbiAgICBtYXJnaW4tbGVmdDogMzUlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAzMCU7XHJcbiAgXHJcbiAgfVxyXG5cclxuICAuY2VsbC1pbnB1dCB7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrOyBcclxuICAgIGJvcmRlci13aWR0aDogLjAxZW07IFxyXG4gICAgYm9yZGVyLXN0eWxlOnNvbGlkOyBtYXJnaW4tYm90dG9tIDogLTFweDtcclxuICB9XHJcblxyXG4gIGlvbi1jYXJkLGlvbi10b29sYmFyLGlvbi1zZWdtZW50XHJcbntcclxuICAgIC0tYmFja2dyb3VuZDogYmxhY2s7IFxyXG59XHJcbi8vIGlvbi1jYXJkLXRpdGxlXHJcbi8vIHtcclxuLy8gICAgIG1hcmdpbi1sZWZ0OjI1JVxyXG4vLyB9XHJcblxyXG5cclxuaW9uLWl0ZW1cclxue1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBibGFjazsgXHJcbiAgICBjb2xvcjogICNmZmE2MGE7XHJcbn1cclxuXHJcbmlvbi1jaGlwXHJcbntcclxuICAgIGNvbG9yOiBibGFjazsgXHJcbiAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcbmlvbi1idXR0b25cclxue1xyXG4gICAgY29sb3I6IGJsYWNrOyBcclxuICAgIC0tYmFja2dyb3VuZDogI2ZmYTYwYTtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmlvbi1zZWdtZW50LWJ1dHRvblxyXG57XHJcbiAgICBjb2xvciA6ICNmZmE2MGE7XHJcbn1cclxuXHJcbmlvbi1jYXJkLXRpdGxlLGlvbi10ZXh0YXJlYVxyXG57XHJcbiAgICBjb2xvciA6IHdoaXRlO1xyXG59IiwiLmNlbnRlci1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMzUlO1xuICBtYXJnaW4tcmlnaHQ6IDMwJTtcbn1cblxuLmNlbGwtaW5wdXQge1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xuICBib3JkZXItd2lkdGg6IDAuMDFlbTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgbWFyZ2luLWJvdHRvbTogLTFweDtcbn1cblxuaW9uLWNhcmQsIGlvbi10b29sYmFyLCBpb24tc2VnbWVudCB7XG4gIC0tYmFja2dyb3VuZDogYmxhY2s7XG59XG5cbmlvbi1pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiBibGFjaztcbiAgY29sb3I6ICNmZmE2MGE7XG59XG5cbmlvbi1jaGlwIHtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG5pb24tYnV0dG9uIHtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJhY2tncm91bmQ6ICNmZmE2MGE7XG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XG59XG5cbmlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gIGNvbG9yOiAjZmZhNjBhO1xufVxuXG5pb24tY2FyZC10aXRsZSwgaW9uLXRleHRhcmVhIHtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppServiceService } from 'src/app/service/appService/app-service.service';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n\r\nconst { Storage } = Plugins;\r\nconst LNG_KEY = 'SELECTED LANGUAGE'; // this is used to fetch or manipulate the var(containing the selected language) present in the storage\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-reservation-page',\r\n  templateUrl: './reservation-page.page.html',\r\n  styleUrls: ['./reservation-page.page.scss'],\r\n})\r\nexport class ReservationPagePage implements OnInit {\r\n\r\n //////////////Date////////////////////\r\n public  today: any ;     // today's date \r\n public  maxdate : any;   // the maximum date of a date picker\r\n//  isSearchbarOpened;\r\n /////////////////////////////////\r\n //////////////////////////////////////////////////////////////////////\r\n  ////////////data for destination////////////////////////\r\n  searchQuery:any;\r\n  searchQuery1:any;\r\n  destination_to_be_search : any;\r\n  depart_to_be_search : any;\r\n  list_original = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  //for departure\r\n  list_original1 = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  list_to_show = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  \r\n  //for departure\r\n  list_to_show1 = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  selected_index = -1;\r\n  show_list1 = false; // for destination\r\n\r\n  show_list = false;\r\n  coef : any //coefficient de reservation\r\n  coef1 : any //coefficient de reservation\r\n///////////////////////end data for destination search ///////////////////\r\n  \r\n\r\n\r\n//////////////////////////////////////////////////\r\n\r\n//my car : this var will receive the car with all its details\r\ncar = {\r\n  'id' : '',\r\n  'modele' : '',\r\n  'per_day' : 0,\r\n  'per_hour' : 0,\r\n  'airport' : 0\r\n}\r\n\r\n////////option values\r\noption : any ;\r\n\r\nsubscription: Subscription;\r\n\r\n  //car ID\r\n  carID =\"\" \r\n  //prev page\r\n  page_prev =\"\" \r\n  /////////////////////////////////////\r\n   ////var data to be sent //////////\r\n   rent_type : any =\"day\";\r\n   destination : any;\r\n   price : any;\r\n   start_date : string;\r\n   start_time : string;\r\n   end_date : string;\r\n   end_time : string;\r\n   depart_venue : any;\r\n   message : string;\r\n\r\n   min_retunDate : any;// min return date for reservation per day\r\n   hourNbr = 0;  // coef of number of hour for reservation per hour\r\n\r\n  \r\n\r\n   ////////////////////////////////////////////////////////\r\n\r\n   \r\n   //this is the object we have to send to the API\r\n   dataToSend = {\r\n      \"date_location\": \"\",\r\n      \"date_debut\": \"\",\r\n      \"date_fin\": \"\",\r\n      \"montant\": 0,\r\n      \"message\": \"\",\r\n      \"client\": 0,\r\n      \"voiture\": 0,\r\n      \"type_location\": 0,\r\n      \"destination\": 0,\r\n      \"etape_location\": 1,\r\n      \"depart\" : null,\r\n      \"optionnel\": []\r\n    \r\n   }//end of object to send\r\n   ///////////////////////////////\r\n\r\n   token : any\r\n\r\n/////////////////////////////////////////////////////\r\n   show = false; //is to show page content\r\n  lang: string;\r\n  customPickerOptions: { buttons: { text: string; handler: () => void; }[]; };\r\n \r\n\r\n\r\n  constructor( private router : Router, private route: ActivatedRoute, \r\n                private webservice : AppServiceService,\r\n                public alertController: AlertController) { \r\n\r\n      // date\r\n      this.setDate();\r\n\r\n      \r\n  }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.lang = (await Storage.get({ key: LNG_KEY })).value;\r\n\r\n        // //present loading\r\n        this.webservice.presentLoading();\r\n\r\n        ////////////////////////////////////////////////////////////////\r\n        ///////////////receive car id/////////////////////////////////////////////////\r\n        this.subscription = this.route.queryParams.subscribe((data) => {\r\n                \r\n              //console.log(\"selected ->\", typeof(data.id))\r\n\r\n            //set the prev page\r\n            this.page_prev = data.prev\r\n            //set the Car ID \r\n            this.carID = data.id\r\n\r\n\r\n               ////////////////////////////////////////////////////////////////////////////   \r\n      //get Destination list\r\n\r\n      this.webservice.getDestinations().subscribe(async res=>{\r\n            //console.log(\"getting Destinations : \",res); \r\n            if(res)\r\n            {\r\n                this.list_original = res;\r\n                this.list_original1 = res;\r\n                \r\n            }\r\n\r\n\r\n        ////////////////////////////////////////////////////////////////////////////////////////////////\r\n        ////////////////////////Start : Get Optionnels/////////////////////////////////////////////////\r\n                this.webservice.getOption().subscribe(resp =>{\r\n\r\n                  this.option = resp;\r\n                  //console.log(resp)\r\n\r\n                ///////////////////////////////////////////////////////////////////////////////////////////\r\n                //////////////////Start : Get Car details/////////////////////////////////////////////////\r\n                  this.webservice.getCarDetails(data.id).subscribe(res =>{\r\n\r\n                      this.car = res;\r\n\r\n                    // get the differents pice of the car\r\n                    this.webservice.getPriceCar(data.id).subscribe( resp =>{\r\n\r\n                      // this.car.per_day = resp[0].prix;\r\n                      // this.car.per_hour = resp[1].prix;\r\n                      // this.car.airport = resp[2].prix;\r\n\r\n                      for(let i=0; i< resp.length; i++)\r\n                      {\r\n                        if(resp[i].type_location == 1) // par jour\r\n                        {\r\n                          this.car.per_day = resp[i].prix;\r\n                        }\r\n                        else if(resp[i].type_location == 2) // par heure\r\n                        {\r\n                          this.car.per_hour = resp[i].prix;\r\n                        }\r\n                        else if(resp[i].type_location == 3) // par airport\r\n                        {\r\n                          this.car.airport = resp[i].prix;\r\n                        }\r\n            \r\n                      }\r\n\r\n                      //stop loading\r\n                    this.webservice.stopLoading();\r\n                      this.show = true;\r\n\r\n                    }); //end get prices\r\n\r\n\r\n                      //console.log(res)\r\n                  }) ;\r\n                //////////////////Stop : Get Car details//////////////////////////////////////////////////\r\n                /////////////////////////////////////////////////////////////////////////////////////////\r\n                \r\n                              \r\n                  }) ;\r\n        //////////////////////////Stop : Get  Optionnels//////////////////////////////////////////////////\r\n                /////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n              }); //// end get destinations\r\n        ////////////////////////////////////////////////////////////////////\r\n            \r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////    \r\n    setDate()\r\n    {\r\n      let date : Date = new Date();\r\n      var month, day\r\n\r\n\r\n\r\n       //set min date for return date reserv per day\r\n    \r\n       this.min_retunDate = new Date()\r\n       this.min_retunDate.setDate(this.min_retunDate.getDate() + 1);\r\n\r\n       this.min_retunDate = this.min_retunDate.toISOString();\r\n\r\n      \r\n\r\n\r\n       ///////////////////////today's date or reservation date //////////////////////////\r\n       this.dataToSend.date_location = date.toISOString();\r\n\r\n      //today's date\r\n      this.today = date.getFullYear() +\"-\"+ (date.getMonth()+1) + \"-\"+date.getDate();\r\n    \r\n         if(date.getMonth()+1 <10)\r\n         {\r\n           month = \"0\"+(date.getMonth()+1)\r\n         }else{\r\n           month = date.getMonth()+1\r\n         }\r\n    \r\n         if(date.getDate() <10)\r\n         {\r\n           day = \"0\"+date.getDate()\r\n         }else{\r\n           day = date.getDate()\r\n         }\r\n    \r\n         this.today = date.getFullYear() +\"-\"+ month + \"-\"+day\r\n\r\n         this.start_date = this.today;\r\n         this.end_date = this.start_date;\r\n         this.start_time = \"09:00\";\r\n         this.end_time = \"10:00\";\r\n    \r\n        \r\n       \r\n    \r\n      //maximum date\r\n      var x =  new Date().setDate( date.getDate()+90 )\r\n      this.maxdate = new Date(x)\r\n    \r\n      if(this.maxdate.getMonth()+1 <10)\r\n      {\r\n        month = \"0\"+(this.maxdate.getMonth()+1)\r\n      }else{\r\n         month = this.maxdate.getMonth()+1\r\n      }\r\n    \r\n      if(this.maxdate.getDate() <10)\r\n      {\r\n        day = \"0\"+this.maxdate.getDate()\r\n      }else{\r\n        day = this.maxdate.getDate()\r\n      }\r\n    \r\n      this.maxdate = this.maxdate.getFullYear() +\"-\"+ month + \"-\"+day\r\n      \r\n    \r\n    \r\n     // console.log(\"Today = \" + this.today + \" \\n MAX DATE : \"+ this.maxdate); \r\n    \r\n    \r\n    \r\n    } \r\n\r\n  //////////////////////////////////////////////////////////////\r\n  ////back to prev ///\r\n\r\n  prev(){\r\n\r\n    //call another page and make the reservation of the car\r\n    this.router.navigate(['car-details'], {queryParams:{id: this.carID, prev : this.page_prev }})\r\n  }\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n/////////////////Submit reservation///////////////////////////////////////////////////////\r\n    async submit(id)\r\n    {\r\n\r\n      \r\n        //check if destination is null\r\n        if(this.destination)\r\n        {\r\n\r\n\r\n          //////////////////////////car id ///////////////////////////////////////////////\r\n            this.dataToSend.voiture = id;   \r\n\r\n            //console.log(\"id : \",id,\"\\n coef : \",this.coef)\r\n        \r\n          /////////////////////////////////user id ///////////////////////////////////////////////  \r\n      \r\n             var ret =JSON.parse( (await Storage.get({ key: \"user_infos\" })).value);\r\n            // console.log(\"user : \", ret);\r\n             this.dataToSend.client = ret.id;\r\n        \r\n          //////////////////////////////get token storage////////////////////////////////////////\r\n            this.token =(await Storage.get({ key: 'accessToken' })).value;\r\n           // console.log(\"Token : \", this.token);\r\n\r\n            /////////////////// set start date /////////////////////////////////////////////////////\r\n            //this.dataToSend.date_debut = this.start_date\r\n            this.start_date = this.start_date.split(\"T\")[0]  ;     \r\n            this.dataToSend.date_debut = this.start_date + \"T\"+this.start_time+\":44.625Z\" ;     \r\n            //////////////////// set start hour /////////////////////////////////////////////////////\r\n          // this.dataToSend.heure_debut = this.start_time;     \r\n        \r\n\r\n          ///////////////////////////////////////////////////////////////////////////////////////////\r\n          if(this.rent_type ==\"hour\")\r\n          {\r\n            /////coef of the number of hour\r\n            if(this.hourNbr >0)\r\n            {\r\n\r\n                ///////set type rent to hour id \r\n                this.dataToSend.type_location = 2;\r\n                /////////////////// set end hour /////////////////////////////////////////////////////\r\n                //this.dataToSend.heure_fin = this.end_time;\r\n                /////// set the end date to \"\";\r\n                this.dataToSend.date_fin = this.start_date+\"T\"+this.end_time+\":44.625Z\" ; \r\n                //this.dataToSend.date_fin = \"\"+ \" \"+this.end_time;\r\n                /////// set depart venue  (for airoort type)\r\n                //this.dataToSend.lieu_depart = \"\";\r\n            \r\n      \r\n                  //////price with number of hour and destination coef included \r\n      \r\n      \r\n                  this.price =  (this.car.per_hour * (1+ this.coef  )) * this.hourNbr;\r\n              \r\n            }\r\n            else\r\n            {\r\n                if(this.lang ==\"fr\")\r\n                {\r\n                  alert(\"Entrez le nombre d'heure ! ( > 0) \");\r\n                }else{\r\n                  alert(\"Enter the number of Hour ! ( > 0) \")\r\n                }\r\n                return ;\r\n\r\n\r\n            }\r\n          \r\n           \r\n          }\r\n          else if(this.rent_type ==\"day\")\r\n          {\r\n\r\n             /////coef of the number of day\r\n            // To set two dates to two variables \r\n            var date1 = new Date(this.start_date); \r\n            var date2 = new Date(this.end_date); \r\n              \r\n            // To calculate the time difference of two dates \r\n            var Difference_In_Time = date2.getTime() - date1.getTime(); \r\n              \r\n            // To calculate the no. of days between two dates \r\n            var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24); \r\n\r\n            if(Difference_In_Days > 0)\r\n            {\r\n\r\n               ///////set type rent to day id \r\n            this.dataToSend.type_location = 1;\r\n            //////////////////////set end date ///////////////////////////////////////////////////////\r\n            // this.dataToSend.date_fin = this.end_date\r\n            this.end_date = this.end_date.split(\"T\")[0] ;\r\n            this.dataToSend.date_fin = this.end_date+\"T\"+this.end_time+\":44.625Z\" ;\r\n            /////////////////// set end hour /////////////////////////////////////////////////////\r\n            // this.dataToSend.heure_fin = this.end_time;\r\n            /////// set depart venue \r\n            //this.dataToSend.lieu_depart = \"\";\r\n\r\n            this.price =( this.car.per_day * (1+ this.coef)) * Difference_In_Days; \r\n\r\n\r\n            }\r\n            else{\r\n\r\n              if(this.lang ==\"fr\")\r\n              {\r\n                alert(\"Le Nombre de jour doit être > 0 \");\r\n              }else{\r\n                alert(\"Number of Day Should be > 0\")\r\n              }\r\n              return ;\r\n            }\r\n\r\n          }\r\n          else if(this.rent_type ==\"airport\")\r\n          {\r\n             \r\n               // console.log(\"Depar Id\", this.depart_venue)\r\n             if(this.depart_venue)\r\n             {\r\n               //check if depart != destination\r\n               if(this.depart_venue != this.destination)\r\n                {\r\n                  //check if aeroport is selected \r\n                  if(this.depart_venue == 203 || this.destination == 203 )\r\n                   {     \r\n                        ///////////////////set depart//////////////////\r\n                        this.dataToSend.depart = this.depart_venue;\r\n                            ///////set type rent to airport id \r\n                        this.dataToSend.type_location = 3;\r\n                        this.dataToSend.date_fin = this.start_date+\"T\"+this.start_time+\":44.625Z\" \r\n                        /// set end time /////////////////////////\r\n                        this.dataToSend.date_fin = this.start_date+\"T\"+this.end_time+\":44.625Z\";\r\n                        //////////////////////set departure venue ///////////////////////////////////////////////////////\r\n                        //this.dataToSend.lieu_depart = this.depart_venue;\r\n                        var c = (this.coef1 + this.coef)/2\r\n\r\n                        this.price = (this.car.airport + this.car.airport * c);\r\n                   }\r\n                   else{\r\n\r\n                    if(this.lang ==\"fr\")\r\n                    {\r\n                      alert(\"Assurez-vous d'avoir choisi Aéroport comme départ ou destination.\");\r\n                    }else{\r\n                      alert(\"Make sure you have chosen Aéroport either as departure or destination.\")\r\n                    }\r\n                    return ;\r\n\r\n                   }     \r\n                }else{\r\n\r\n                  if(this.lang ==\"fr\")\r\n                  {\r\n                    alert(\"Désolé, le départ doit être différent de la destination.\");\r\n                  }else{\r\n                    alert(\"Sorry, the departure must be different from the destination.\")\r\n                  }\r\n                  return ;\r\n\r\n                } \r\n             }\r\n             else\r\n             {\r\n              if(this.lang ==\"fr\")\r\n              {\r\n                alert(\"Choisissez un Lieu de depart !\");\r\n              }else{\r\n                alert(\"Select a Departure venue !\")\r\n              }\r\n              return ;\r\n             }\r\n\r\n            \r\n\r\n          }\r\n          ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n\r\n          //////////////////////////////////////////////////////////////////////////////////////////////////\r\n          ////////////////////////////get the selected option and add price /////////////////////////////////////\r\n          var index = 0 ;\r\n          for(let i=0 ; i<this.option.length ; i++)\r\n          {\r\n              if(this.option[i].checked)\r\n              {\r\n                ////////////////////////////////////////////////////////////////////\r\n                  if(this.rent_type ==\"hour\")\r\n                  {\r\n                    //console.log(\"price : \",typeof(this.price),\"\\n option price : \", typeof(this.option[i].prix))\r\n                    \r\n                    this.price = parseFloat(this.price) + this.option[i].prix;\r\n                    //add the optionnel id into the dataTosend field array\r\n                    this.dataToSend.optionnel[index] = this.option[i].id;\r\n                    index = index+1;\r\n                  \r\n                  }\r\n                  else if(this.rent_type ==\"day\")\r\n                  {\r\n                    this.price = this.price + this.option[i].prix;\r\n                    //add the optionnel id into the dataTosend field array\r\n                    this.dataToSend.optionnel[index] = this.option[i].id;\r\n                    index = index+1;\r\n\r\n                  }\r\n                  else if(this.rent_type ==\"airport\")\r\n                  {\r\n                    this.price =  this.price + this.option[i].prix;\r\n                    //add the optionnel id into the dataTosend field array\r\n                    this.dataToSend.optionnel[index] = this.option[i].id;\r\n                    index = index+1;\r\n            \r\n\r\n                  }\r\n                  //////////////////////////////////////////////////////////////\r\n                \r\n                  //console.log(this.option[i]);\r\n              }\r\n          }\r\n\r\n          //////////////////set destination ////////////////////////////////////////////\r\n          this.dataToSend.destination = this.destination\r\n\r\n          /////////////////////set price ///////////////////////////////////////////////////\r\n          this.dataToSend.montant = this.price;\r\n          \r\n          /////////////////////set message///////////////////////////////////////////////////\r\n          this.dataToSend.message = this.message;\r\n          \r\n\r\n          //console.log(\"\\n data to send : \\n\", this.dataToSend);\r\n\r\n          // present alert\r\n              this.presentAlertConfirm(this.price,this.start_date,this.end_date)\r\n        }\r\n        else\r\n        {\r\n          if(this.lang ==\"fr\")\r\n          {\r\n            alert(\"Choisissez une Destination !\");\r\n          }else{\r\n            alert(\"Select one destination !\")\r\n          }\r\n            \r\n        }\r\n\r\n   \r\n   \r\n    }\r\n\r\n    ////// present Confirmation alert///////////\r\n    \r\n      // present alert\r\n      async presentAlertConfirm(price, start_date , end_date) {\r\n\r\n    \r\n        var lang = (await Storage.get({ key: LNG_KEY })).value;\r\n        if(lang ==\"fr\")\r\n        {\r\n          var text = \"Prix Total : \";\r\n          var textcancel = \"Annuler \";\r\n          var textok = \"Valider \";\r\n          \r\n        }else{\r\n          var text = \"Total Price : \";\r\n          var textcancel = \"Cancel \";\r\n          var textok = \"OK \";\r\n          \r\n        }\r\n\r\n        const alert = await this.alertController.create({\r\n          cssClass: 'my-custom-class',\r\n          header: 'Validation!!',\r\n          message: '<strong>'+text +'</strong>' + price + ' F CFA',\r\n          buttons: [\r\n            {\r\n              text: textcancel,\r\n              role: 'cancel',\r\n              cssClass: 'secondary',\r\n              handler: (blah) => {\r\n                //console.log('Confirm Cancel: blah');\r\n              }\r\n            }, {\r\n              text: textok,\r\n              handler: () => {\r\n                //console.log('Confirm Okay');\r\n                  //preseent loader\r\n                 this.webservice.presentLoading()    \r\n                 ////send the data to the API\r\n                this.webservice.postReservation(this.token, this.dataToSend).subscribe(res=>{\r\n                      //console.log(res)\r\n                      if(res)\r\n                      {\r\n                        this.webservice.stopLoading();\r\n                        // console.log(\"done\");\r\n                         this.myAlert(0,lang);     \r\n\r\n\r\n                      }\r\n\r\n                },error =>{\r\n                  \r\n                  //stop loader\r\n                  this.webservice.stopLoading();\r\n                 // console.log(\"error : \\n\",error); \r\n                     this.myAlert(1,lang);     \r\n                 }\r\n                );\r\n\r\n\r\n\r\n              }\r\n            }\r\n          ]\r\n        });\r\n    \r\n        await alert.present();\r\n      } \r\n\r\n    //alert 2 method\r\n   myAlert(id,lang)\r\n   {\r\n     if(id==0)\r\n     {\r\n        if(lang ==\"fr\" )\r\n        {\r\n           alert( \"Votre Requête a été envoyée avec succès !\");\r\n        }else{\r\n          alert(\"Your Request has been sent successfully !\");\r\n         }\r\n        //  this.router.navigateByUrl(\"/dashboard\");\r\n        this.prev();\r\n     }else{\r\n\r\n        if(lang ==\"fr\" )\r\n        {\r\n          alert( \"Désolé, une erreur s'est produite, veuillez vérifier à nouveau votre saisie.\");\r\n        }else{\r\n          alert(\"Sorry, an error has occurred please, check your entry again.\");\r\n        }\r\n\r\n     }\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n////////////////change end time\r\nchange(type)\r\n{\r\n   ////per hour\r\n   if(type == \"hour\")\r\n   {\r\n       // console.log(\"start : \",this.start_time,\"\\n type time :\",typeof(this.start_time));\r\n        var x = parseInt(this.start_time.split(\":\")[0]) + this.hourNbr;\r\n        var y = parseInt(this.start_time.split(\":\")[1]) ;\r\n\r\n\r\n\r\n        if(x<=23 && y <=59)\r\n        {\r\n            if(x<10)\r\n            {\r\n              if(y<10)\r\n              {\r\n                this.end_time = \"0\"+x+\":0\"+y;\r\n\r\n              }\r\n              else{\r\n                this.end_time = \"0\"+x+\":\"+y;\r\n              }\r\n            }else{\r\n              if(y<10)\r\n              {\r\n                this.end_time = \"\"+x+\":0\"+y;\r\n\r\n              }\r\n              else{\r\n                this.end_time = \"\"+x+\":\"+y;\r\n              }\r\n            }\r\n        }\r\n        else\r\n        {\r\n\r\n            this.hourNbr = 0;\r\n\r\n  \r\n            if(this.lang == \"fr\")\r\n            {\r\n              alert(\"Désolé, l'heure de retour Max  est :  23 Hr : 59 min \");\r\n            }\r\n            else\r\n            {\r\n              alert(\"Sorry, the maximum return time is: 11 : 59 PM \");\r\n\r\n            }\r\n            \r\n        }  \r\n       \r\n   }\r\n   ////per day\r\n   if(type == \"day\")\r\n   {\r\n\r\n      // Create new Date instance\r\n      var date = new Date(this.start_date)\r\n\r\n      // Add a day\r\n      date.setDate(date.getDate() + 1);\r\n\r\n      this.end_date = date.toISOString();\r\n\r\n      this.min_retunDate = date.toISOString();\r\n       \r\n       \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  ///////////////////////Search methods //////////////////////////////\r\n  onCancel(val,i) {\r\n\r\n    \r\n\r\n    if(i==0)\r\n    {\r\n      this.depart_venue = null;\r\n\r\n      this.show_list1 = false;\r\n      this.list_to_show1 = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n    }\r\n    else\r\n    {\r\n      this.destination = null;\r\n      this.show_list = false;\r\n      this.list_to_show = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n    }\r\n  \r\n\r\n   \r\n\r\n  }\r\n\r\n  click_bar(i) {\r\n\r\n\r\n    if(i == 0)\r\n    {\r\n      this.list_to_show1 = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n      this.show_list1 = true;\r\n    }\r\n    else\r\n    {\r\n      this.list_to_show = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n      this.show_list = true;\r\n    }\r\n    \r\n  }\r\n\r\n  click_item(val, id,coef, type)   // here type is used to mention if it is departure or destination\r\n  {                                // 0 for departure 1 - for destination \r\n      //this.depart_venue = null;\r\n      //this.destination = null; \r\n\r\n        if(type==0)\r\n        {\r\n            //set departure\r\n            this.depart_venue = id;\r\n            //console.log(\"depart id :\", this.depart_venue);\r\n\r\n            //set coef \r\n            this.coef1 = parseFloat(coef);\r\n\r\n          for (let i = 0 ; i < this.list_original1.length; i++)\r\n          {\r\n              if (this.list_to_show1[val].destination.toUpperCase() === this.list_original1[i].destination.toUpperCase()) {\r\n                  this.selected_index = i;\r\n                \r\n                \r\n                      //print the selected departure\r\n                      this.searchQuery1 = this.list_to_show1[val].destination;\r\n                \r\n                  \r\n\r\n                  // set the depart to be search\r\n                  this.depart_to_be_search  = this.list_to_show1[val];\r\n\r\n                  break;\r\n              }\r\n          }\r\n          this.show_list1 = false;\r\n\r\n            \r\n        }\r\n        else{\r\n          //set destination\r\n          this.destination = id;\r\n        \r\n          //set coef \r\n          this.coef = parseFloat(coef);\r\n\r\n          for (let i = 0 ; i < this.list_original.length; i++)\r\n          {\r\n              if (this.list_to_show[val].destination.toUpperCase() === this.list_original[i].destination.toUpperCase()) {\r\n                  this.selected_index = i;\r\n                \r\n                 \r\n                      //print the selected destination\r\n                      this.searchQuery = this.list_to_show[val].destination;\r\n                  \r\n\r\n                  // set the destinatination to be search\r\n                  this.destination_to_be_search  = this.list_to_show[val];\r\n\r\n                  break;\r\n              }\r\n          }\r\n          this.show_list = false;\r\n       }\r\n  }\r\n\r\n  change_query(query,i)\r\n  {\r\n  \r\n        if(i==0)\r\n        {\r\n          let k = 0;\r\n          this. list_to_show1 = [\r\n            {\r\n                'id': '',\r\n                'destination' :'',\r\n                'coefficient' : ''\r\n            }\r\n          ];\r\n          for (let i = 0 ; i < this.list_original1.length; i++)\r\n          {\r\n              if (this.list_original1[i].destination.toUpperCase().includes(query.toUpperCase()))\r\n              {\r\n                  this.list_to_show1[k] =  this.list_original1[i];\r\n                  k += 1;\r\n              }\r\n          }\r\n\r\n        }else{\r\n            let k = 0;\r\n            this. list_to_show = [\r\n              {\r\n                  'id': '',\r\n                  'destination' :'',\r\n                  'coefficient' : ''\r\n              }\r\n            ];\r\n            for (let i = 0 ; i < this.list_original.length; i++)\r\n            {\r\n                if (this.list_original[i].destination.toUpperCase().includes(query.toUpperCase()))\r\n                {\r\n                    this.list_to_show[k] =  this.list_original[i];\r\n                    k += 1;\r\n                }\r\n            }\r\n          }  \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]}