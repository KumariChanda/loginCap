{"version":3,"sources":["webpack:///src/app/pages/dashboard/dashboard.page.html","webpack:///src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/pages/dashboard/dashboard.module.ts","webpack:///src/app/pages/dashboard/dashboard.page.scss","webpack:///src/app/pages/dashboard/dashboard.page.ts"],"names":["routes","path","component","DashboardPageRoutingModule","imports","forChild","exports","DashboardPageModule","declarations","Storage","DashboardPage","route","router","webService","logo1","dataSaveReturn","isSearchbarOpened","term","filterData","rent_type","list_original","list_to_show","selected_index","show_list","show","setDate","presentLoading","getVoitures","subscribe","res","console","log","i","getPriceCar","id","resp","per_day","prix","length","getDestinations","stopLoading","date","Date","month","day","today","getFullYear","getMonth","getDate","x","maxdate","carID","navigate","queryParams","prev","val","destination","toUpperCase","searchQuery","destination_to_be_search","query","k","includes","selector","template"],"mappings":"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","file":"pages-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-item *ngIf=\\\"!isSearchbarOpened\\\">\\r\\n\\r\\n           <!-- menu icon -->\\r\\n      <ion-buttons *ngIf=\\\"!isSearchbarOpened\\\" slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n\\r\\n      <!-- title -->\\r\\n      <ion-title *ngIf=\\\"!isSearchbarOpened\\\" >{{ 'DASHBOARD.title' | translate }}</ion-title>\\r\\n\\r\\n   \\r\\n       <!-- search bar button -->\\r\\n       <ion-buttons slot=\\\"end\\\">\\r\\n          <ion-button icon-only *ngIf=\\\"!isSearchbarOpened\\\" (click)=\\\"isSearchbarOpened=true\\\" >\\r\\n              <ion-icon color=\\\"primary\\\" name=\\\"search\\\"> </ion-icon>\\r\\n          </ion-button>\\r\\n      </ion-buttons>\\r\\n\\r\\n\\r\\n    </ion-item>\\r\\n\\r\\n<!-- Search Bar -->\\r\\n   <ion-searchbar *ngIf=\\\"isSearchbarOpened\\\" placeholder=\\\"{{ 'DASHBOARD.search_here' | translate }}\\\" [(ngModel)]=\\\"term\\\" animated=\\\"true\\\" showCancelButton=\\\"true\\\" (ionCancel)=\\\"isSearchbarOpened=false\\\"></ion-searchbar>\\r\\n\\r\\n     \\r\\n  </ion-toolbar>\\r\\n    \\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"show\\\" >\\r\\n\\r\\n\\r\\n    \\r\\n<!-- Default Segment / Search for the car according to the type of reservation -->\\r\\n <!--   First main Search  -->\\r\\n\\r\\n  <ion-card  *ngIf=\\\"!isSearchbarOpened\\\">\\r\\n        <ion-card-header>\\r\\n\\r\\n         <ion-card-title style=\\\"margin-buttom:10%; margin-left:30%\\\"> RESERVATION </ion-card-title>\\r\\n              <!-- Label only -->\\r\\n          <ion-segment [(ngModel)]=\\\"rent_type\\\">\\r\\n            <ion-segment-button  value=\\\"hour\\\">\\r\\n              <ion-label>{{ 'DASHBOARD.per_hour' | translate }} </ion-label>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"day\\\">\\r\\n              <ion-label>{{ 'DASHBOARD.per_day' | translate }}</ion-label>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"airport\\\">\\r\\n              <label  textWrap=\\\"true\\\" style=\\\"font-size:0.9em\\\">{{ 'DASHBOARD.airport_pick' | translate }}</label>\\r\\n            </ion-segment-button>\\r\\n          </ion-segment>\\r\\n\\r\\n        </ion-card-header>\\r\\n\\r\\n        <ion-card-content>\\r\\n             \\r\\n              <!-- Search Bar -->\\r\\n               <ion-searchbar placeholder=\\\"Destination (*) \\\"[(ngModel)]=\\\"searchQuery\\\" (click)=\\\"click_bar()\\\" (ionCancel)=\\\"onCancel($event)\\\" (ionClear)\\t=\\\"onCancel($event)\\\" (ngModelChange)=\\\"change_query($event)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\r\\n                \\r\\n                <ion-list *ngIf=\\\"show_list\\\">\\r\\n                   <ion-item *ngFor=\\\"let item of list_to_show; let i = index\\\">\\r\\n                       <ion-label (click)=\\\"click_item(i)\\\" > {{item.destination}} </ion-label>\\r\\n                   </ion-item>\\r\\n                </ion-list>\\r\\n\\r\\n\\r\\n                <ion-item  >\\r\\n                  <ion-label> {{ 'DASHBOARD.start_date' | translate }}</ion-label>\\r\\n                  <ion-datetime [value]=\\\"today\\\" [min]=\\\"today\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <ion-item >\\r\\n                  <ion-label> {{ 'DASHBOARD.start_time' | translate }}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item  *ngIf=\\\"rent_type =='day' \\\">\\r\\n                   <ion-label> {{ 'DASHBOARD.return_date' | translate }}</ion-label>\\r\\n                   <ion-datetime [value]=\\\"today\\\"   [min]=\\\"today\\\"  [max]=\\\"maxdate\\\"   placeholder=\\\"Select Date\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <ion-item  *ngIf=\\\"rent_type =='hour' || rent_type =='day' \\\">\\r\\n                   <ion-label> {{ 'DASHBOARD.return_time' | translate }}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- departure -->\\r\\n                <ion-item  *ngIf=\\\"rent_type =='airport' \\\">\\r\\n                  <ion-input  placeholder=\\\"{{ 'DASHBOARD.departure_venue' | translate }}\\\" ></ion-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <!-- button search -->\\r\\n\\r\\n                <ion-button expand=\\\"block\\\"> \\r\\n                      <ion-icon slot=\\\"start\\\" name=\\\"search\\\"></ion-icon>\\r\\n                      {{ 'DASHBOARD.btn_search' | translate }}\\r\\n                 </ion-button>\\r\\n\\r\\n        </ion-card-content>\\r\\n\\r\\n        <!-- List of cars -->\\r\\n      \\r\\n  </ion-card>\\r\\n\\r\\n     <ion-list-header  style=\\\" margin-left:23%\\\"> \\r\\n          <ion-chip *ngIf=\\\"!isSearchbarOpened\\\" > {{ 'DASHBOARD.our_vehicles' | translate }}  <br>\\r\\n             <ion-icon   name=\\\"caret-down-sharp\\\"></ion-icon>\\r\\n           </ion-chip >\\r\\n\\r\\n    \\r\\n     </ion-list-header>\\r\\n\\r\\n\\r\\n     <ion-card *ngFor=\\\"let item of filterData | filter:term\\\">\\r\\n    \\r\\n        <div *ngFor=\\\"let photo of item.photo; let i = index \\\" > \\r\\n          \\r\\n          <img *ngIf=\\\"i== 0\\\"  [src]=\\\"photo.image\\\" />\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>\\r\\n             \\r\\n                <!-- type of motor -->\\r\\n                <ion-chip >\\r\\n                  <ion-icon name=\\\"car\\\"></ion-icon>\\r\\n                  <ion-label >{{item.type_caburant}}</ion-label>\\r\\n                </ion-chip>\\r\\n                <!-- Car price-->\\r\\n                <ion-chip >\\r\\n                  <!-- <ion-icon name=\\\"medal\\\" ></ion-icon> -->\\r\\n                  <ion-label  textWrap=\\\"true\\\">{{item.per_day}} F CFA / {{ 'DASHBOARD.day' | translate }}</ion-label>\\r\\n                </ion-chip> <br>\\r\\n                <!-- Number of Seats-->\\r\\n                <ion-chip >\\r\\n                  <ion-icon name=\\\"person\\\"></ion-icon>\\r\\n                  <ion-label >{{item.passager}} {{ 'DASHBOARD.seats' | translate }} </ion-label>\\r\\n                </ion-chip>\\r\\n                <!-- car color -->\\r\\n              <ion-chip>\\r\\n                <ion-label >{{ 'DASHBOARD.color' | translate }} {{item.couleur}} </ion-label> \\r\\n              </ion-chip>\\r\\n\\r\\n          </ion-card-subtitle>\\r\\n          <ion-card-title  > {{item.modele.libelle}}</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n                        \\r\\n               <!-- More-->\\r\\n             <ion-chip style=\\\"margin-left:30%\\\" (click)=\\\"carDetails(item.id)\\\" >\\r\\n                <ion-label >{{ 'DASHBOARD.btn_view_details' | translate }} </ion-label>\\r\\n                <ion-icon name=\\\"chevron-forward\\\"></ion-icon>\\r\\n            </ion-chip>\\r\\n\\r\\n      \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n    <!-- </ion-item> -->\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Ng2SearchPipeModule,\r\n    DashboardPageRoutingModule,\r\n    TranslateModule\r\n  ],\r\n  declarations: [DashboardPage]\r\n})\r\nexport class DashboardPageModule {}\r\n","export default \"ion-card, ion-toolbar, ion-segment {\\n  --background: black;\\n}\\n\\nion-item {\\n  --background: black;\\n  color: #ffa60a;\\n}\\n\\nion-chip, ion-button {\\n  color: black;\\n  --background: #ffa60a;\\n  border-color: black;\\n}\\n\\nion-segment-button {\\n  color: #ffa60a;\\n}\\n\\nion-card-title {\\n  color: white;\\n}\\n\\nimg {\\n  height: 250px;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL0Q6XFxpb25pYzRcXGxvZ2luQ2FwL3NyY1xcYXBwXFxwYWdlc1xcZGFzaGJvYXJkXFxkYXNoYm9hcmQucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG1CQUFBO0FDQUo7O0FES0E7RUFFSSxtQkFBQTtFQUNBLGNBQUE7QUNISjs7QURNQTtFQUVJLFlBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FDSko7O0FET0E7RUFFSSxjQUFBO0FDTEo7O0FEUUE7RUFFSSxZQUFBO0FDTko7O0FEUUE7RUFFSSxhQUFBO0VBQ0EsV0FBQTtBQ05KIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZCxpb24tdG9vbGJhcixpb24tc2VnbWVudFxyXG57XHJcbiAgICAtLWJhY2tncm91bmQ6IGJsYWNrOyBcclxufVxyXG5cclxuXHJcblxyXG5pb24taXRlbVxyXG57XHJcbiAgICAtLWJhY2tncm91bmQ6IGJsYWNrOyBcclxuICAgIGNvbG9yOiAgI2ZmYTYwYTtcclxufVxyXG5cclxuaW9uLWNoaXAsaW9uLWJ1dHRvblxyXG57XHJcbiAgICBjb2xvcjogYmxhY2s7IFxyXG4gICAgLS1iYWNrZ3JvdW5kOiAjZmZhNjBhO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuaW9uLXNlZ21lbnQtYnV0dG9uXHJcbntcclxuICAgIGNvbG9yIDogI2ZmYTYwYTtcclxufVxyXG5cclxuaW9uLWNhcmQtdGl0bGVcclxue1xyXG4gICAgY29sb3IgOiB3aGl0ZTtcclxufVxyXG5pbWdcclxue1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufSIsImlvbi1jYXJkLCBpb24tdG9vbGJhciwgaW9uLXNlZ21lbnQge1xuICAtLWJhY2tncm91bmQ6IGJsYWNrO1xufVxuXG5pb24taXRlbSB7XG4gIC0tYmFja2dyb3VuZDogYmxhY2s7XG4gIGNvbG9yOiAjZmZhNjBhO1xufVxuXG5pb24tY2hpcCwgaW9uLWJ1dHRvbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgLS1iYWNrZ3JvdW5kOiAjZmZhNjBhO1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xufVxuXG5pb24tc2VnbWVudC1idXR0b24ge1xuICBjb2xvcjogI2ZmYTYwYTtcbn1cblxuaW9uLWNhcmQtdGl0bGUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmltZyB7XG4gIGhlaWdodDogMjUwcHg7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { AppServiceService } from 'src/app/service/appService/app-service.service';\r\n\r\n//import * as moment from 'moment';\r\n\r\n\r\nconst { Storage } = Plugins;\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.page.html',\r\n  styleUrls: ['./dashboard.page.scss'],\r\n})\r\nexport class DashboardPage implements OnInit {\r\n\r\n //////////////Date////////////////////\r\npublic  today: any ;     // today's date \r\npublic  maxdate : any;   // the maximum date of a date picker\r\n\r\n/////////////////////////////////\r\n  data: any;\r\n\r\n\r\n  datauser: any;\r\n  searchQuery:any;\r\n  destination_to_be_search : any;\r\n  logo1 ='../assets/images/logo1.jpg';\r\n  \r\n \r\n\r\n  public dataSaveReturn: any = \"\";\r\n\r\n//////////////////////////////search bar elements for cars ////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n  public isSearchbarOpened = false;\r\n  term = '';\r\n  filterData = [\r\n    {\r\n      'modele': '',\r\n      'id' : '',\r\n      'per_day' : '',\r\n      'per_hour' : '',\r\n      'airport' : '',\r\n      'color' : ''\r\n  \r\n  \r\n    }\r\n  \r\n  ];\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  ////////////data for destination////////////////////////\r\n  rent_type : any =\"hour\";\r\n  list_original = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  list_to_show = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  selected_index = -1;\r\n  show_list = false;\r\n///////////////////////end data for destination search ///////////////////\r\n  \r\n\r\n   show = false // used to show page content\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, \r\n    private webService: AppServiceService) {\r\n      \r\n\r\n      //language\r\n     // this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n\r\n        // date\r\n         this.setDate();\r\n\r\n  \r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    /////////////////////////////////////////////////\r\n   //get voitures list\r\n   //present loading\r\n    this.webService.presentLoading();\r\n    this.webService.getVoitures().subscribe(async res=>{\r\n    console.log(\"getting voitures : \",res); \r\n    if(res)\r\n    {\r\n        this.filterData = res;\r\n        ////get the different prices of every car\r\n       for(let i=0 ; i< this.filterData.length ; i++)\r\n       {\r\n         this.webService.getPriceCar(this.filterData[i].id).subscribe( resp =>{\r\n\r\n          this.filterData[i].per_day = resp[0].prix;\r\n        //  this.filterData[i].per_hour = resp[1].prix;\r\n        //  this.filterData[i].airport = resp[2].prix;\r\n\r\n         }\r\n         );\r\n       }/////end get the different price of each car\r\n        \r\n    }\r\n\r\n      ////////////////////////////////////////////////////////////////////////////   \r\n      //get Destination list\r\n\r\n      this.webService.getDestinations().subscribe(async res=>{\r\n        console.log(\"getting Destinations : \",res); \r\n        if(res)\r\n        {\r\n            this.list_original = res;\r\n            \r\n        }\r\n\r\n      //  console.log(\"res : \", this.list_original)\r\n        this.webService.stopLoading();\r\n        this.show = true;\r\n      }); //// end get destinations\r\n      ////////////////////////////////////////////////////////////////////\r\n      \r\n\r\n  \r\n\r\n\r\n  });/// end get voitures\r\n ////////////////////////////////////////////////////\r\n\r\n  }//end of ngOnInit\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n\r\nsetDate()\r\n{\r\n  let date : Date = new Date();\r\n  var month, day\r\n  //today's date\r\n  this.today = date.getFullYear() +\"-\"+ (date.getMonth()+1) + \"-\"+date.getDate();\r\n\r\n     if(date.getMonth()+1 <10)\r\n     {\r\n       month = \"0\"+(date.getMonth()+1)\r\n     }else{\r\n       month = date.getMonth()+1\r\n     }\r\n\r\n     if(date.getDate() <10)\r\n     {\r\n       day = \"0\"+date.getDate()\r\n     }else{\r\n       day = date.getDate()\r\n     }\r\n\r\n     this.today = date.getFullYear() +\"-\"+ month + \"-\"+day\r\n\r\n\r\n  //maximum date\r\n  var x =  new Date().setDate( date.getDate()+90 )\r\n  this.maxdate = new Date(x)\r\n\r\n  if(this.maxdate.getMonth()+1 <10)\r\n  {\r\n    month = \"0\"+(this.maxdate.getMonth()+1)\r\n  }else{\r\n     month = this.maxdate.getMonth()+1\r\n  }\r\n\r\n  if(this.maxdate.getDate() <10)\r\n  {\r\n    day = \"0\"+this.maxdate.getDate()\r\n  }else{\r\n    day = this.maxdate.getDate()\r\n  }\r\n\r\n  this.maxdate = this.maxdate.getFullYear() +\"-\"+ month + \"-\"+day\r\n  \r\n\r\n\r\n  console.log(\"Today = \" + this.today + \" \\n MAX DATE : \"+ this.maxdate); \r\n\r\n\r\n\r\n}\r\n///////////////end set Date//////////////////////////////////////\r\n//////////////////////////////////////////////////////\r\n\r\n\r\n//this method is used to print the details of a selected car //////////////\r\n  carDetails(carID){\r\n\r\n\r\n    //call another page and fetch the details of the car\r\n    this.router.navigate(['car-details'], {queryParams:{id: carID, prev : \"/dashboard\"} })\r\n\r\n\r\n  }\r\n\r\n//////////////////////end call carDetails///////////////////////////\r\n\r\n\r\n\r\n  //////////////method for destination search //////////////////\r\n    /////////////////////////////////////////////////////\r\n    onCancel(val) {\r\n      this.show_list = false;\r\n      this.list_to_show = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n  \r\n    }\r\n  \r\n    click_bar() {\r\n      this.list_to_show = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n      this.show_list = true;\r\n    }\r\n  \r\n    click_item(val)\r\n    {\r\n          for (let i = 0 ; i < this.list_original.length; i++)\r\n          {\r\n              if (this.list_to_show[val].destination.toUpperCase() === this.list_original[i].destination.toUpperCase()) {\r\n                  this.selected_index = i;\r\n\r\n                  //print the selected destination\r\n                  this.searchQuery = this.list_to_show[val].destination;\r\n\r\n                  // set the destinatination to be search\r\n                  this.destination_to_be_search  = this.list_to_show[val];\r\n\r\n                  break;\r\n              }\r\n          }\r\n          this.show_list = false;\r\n    }\r\n  \r\n    change_query(query)\r\n    {\r\n    \r\n              let k = 0;\r\n              this. list_to_show = [\r\n                {\r\n                    'id': '',\r\n                    'destination' :'',\r\n                    'coefficient' : ''\r\n                }\r\n              ];\r\n              for (let i = 0 ; i < this.list_original.length; i++)\r\n              {\r\n                  if (this.list_original[i].destination.toUpperCase().includes(query.toUpperCase()))\r\n                  {\r\n                      this.list_to_show[k] =  this.list_original[i];\r\n                      k += 1;\r\n                  }\r\n              }\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]}