{"version":3,"sources":["./src/app/pages/dashboard/dashboard.page.html","./src/app/pages/dashboard/dashboard-routing.module.ts","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/dashboard.page.scss","./src/app/pages/dashboard/dashboard.page.ts"],"names":[],"mappings":"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","file":"pages-dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-item *ngIf=\\\"!isSearchbarOpened\\\">\\r\\n\\r\\n           <!-- menu icon -->\\r\\n      <ion-buttons *ngIf=\\\"!isSearchbarOpened\\\" slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n\\r\\n      <!-- title -->\\r\\n      <ion-title *ngIf=\\\"!isSearchbarOpened\\\" >{{ 'DASHBOARD.title' | translate }}</ion-title>\\r\\n\\r\\n   \\r\\n       <!-- search bar button -->\\r\\n       <ion-buttons slot=\\\"end\\\">\\r\\n          <ion-button icon-only *ngIf=\\\"!isSearchbarOpened\\\" (click)=\\\"isSearchbarOpened=true\\\" >\\r\\n              <ion-icon color=\\\"primary\\\" name=\\\"search\\\"> </ion-icon>\\r\\n          </ion-button>\\r\\n      </ion-buttons>\\r\\n\\r\\n\\r\\n    </ion-item>\\r\\n\\r\\n<!-- Search Bar -->\\r\\n   <ion-searchbar *ngIf=\\\"isSearchbarOpened\\\" placeholder=\\\"{{ 'DASHBOARD.search_here' | translate }}\\\" [(ngModel)]=\\\"term\\\" animated=\\\"true\\\" showCancelButton=\\\"true\\\" (ionCancel)=\\\"isSearchbarOpened=false\\\"></ion-searchbar>\\r\\n\\r\\n     \\r\\n  </ion-toolbar>\\r\\n    \\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"show\\\" >\\r\\n\\r\\n\\r\\n    \\r\\n<!-- Default Segment / Search for the car according to the type of reservation -->\\r\\n <!--   First main Search  -->\\r\\n\\r\\n  <ion-card  *ngIf=\\\"!isSearchbarOpened\\\">\\r\\n        <ion-card-header>\\r\\n\\r\\n         <ion-card-title style=\\\"margin-buttom:10%; margin-left:30%\\\"> RESERVATION </ion-card-title>\\r\\n              <!-- Label only -->\\r\\n          <ion-segment [(ngModel)]=\\\"rent_type\\\">\\r\\n            <ion-segment-button  value=\\\"hour\\\">\\r\\n              <ion-label>{{ 'DASHBOARD.per_hour' | translate }} </ion-label>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"day\\\">\\r\\n              <ion-label>{{ 'DASHBOARD.per_day' | translate }}</ion-label>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"airport\\\">\\r\\n              <label  textWrap=\\\"true\\\" style=\\\"font-size:0.9em\\\">{{ 'DASHBOARD.airport_pick' | translate }}</label>\\r\\n            </ion-segment-button>\\r\\n          </ion-segment>\\r\\n\\r\\n        </ion-card-header>\\r\\n\\r\\n        <ion-card-content>\\r\\n             \\r\\n              <!-- Search Bar -->\\r\\n               <ion-searchbar placeholder=\\\"Destination (*) \\\"[(ngModel)]=\\\"searchQuery\\\" (click)=\\\"click_bar()\\\" (ionCancel)=\\\"onCancel($event)\\\" (ionClear)\\t=\\\"onCancel($event)\\\" (ngModelChange)=\\\"change_query($event)\\\" showCancelButton=\\\"focus\\\"></ion-searchbar>\\r\\n                \\r\\n                <ion-list *ngIf=\\\"show_list\\\">\\r\\n                   <ion-item *ngFor=\\\"let item of list_to_show; let i = index\\\">\\r\\n                       <ion-label (click)=\\\"click_item(i)\\\" > {{item.destination}} </ion-label>\\r\\n                   </ion-item>\\r\\n                </ion-list>\\r\\n\\r\\n\\r\\n                <ion-item  >\\r\\n                  <ion-label> {{ 'DASHBOARD.start_date' | translate }}</ion-label>\\r\\n                  <ion-datetime [value]=\\\"today\\\" [min]=\\\"today\\\" [max]=\\\"maxdate\\\" placeholder=\\\"Select Date\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <ion-item >\\r\\n                  <ion-label> {{ 'DASHBOARD.start_time' | translate }}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item  *ngIf=\\\"rent_type =='day' \\\">\\r\\n                   <ion-label> {{ 'DASHBOARD.return_date' | translate }}</ion-label>\\r\\n                   <ion-datetime [value]=\\\"today\\\"   [min]=\\\"today\\\"  [max]=\\\"maxdate\\\"   placeholder=\\\"Select Date\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <ion-item  *ngIf=\\\"rent_type =='hour' || rent_type =='day' \\\">\\r\\n                   <ion-label> {{ 'DASHBOARD.return_time' | translate }}</ion-label>\\r\\n                  <ion-datetime display-format=\\\"HH:mm\\t\\\" picker-format=\\\"HH:mm\\t\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n                <!-- departure -->\\r\\n                <ion-item  *ngIf=\\\"rent_type =='airport' \\\">\\r\\n                  <ion-input  placeholder=\\\"{{ 'DASHBOARD.departure_venue' | translate }}\\\" ></ion-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <!-- button search -->\\r\\n\\r\\n                <ion-button expand=\\\"block\\\"> \\r\\n                      <ion-icon slot=\\\"start\\\" name=\\\"search\\\"></ion-icon>\\r\\n                      {{ 'DASHBOARD.btn_search' | translate }}\\r\\n                 </ion-button>\\r\\n\\r\\n        </ion-card-content>\\r\\n\\r\\n        <!-- List of cars -->\\r\\n      \\r\\n  </ion-card>\\r\\n\\r\\n     <ion-list-header  style=\\\" margin-left:23%\\\"> \\r\\n          <ion-chip *ngIf=\\\"!isSearchbarOpened\\\" > {{ 'DASHBOARD.our_vehicles' | translate }}  <br>\\r\\n             <ion-icon   name=\\\"caret-down-sharp\\\"></ion-icon>\\r\\n           </ion-chip >\\r\\n\\r\\n    \\r\\n     </ion-list-header>\\r\\n\\r\\n\\r\\n     <ion-card *ngFor=\\\"let item of filterData | filter:term\\\">\\r\\n    \\r\\n        <div *ngFor=\\\"let photo of item.photo; let i = index \\\" > \\r\\n          \\r\\n          <img *ngIf=\\\"i== 0\\\"  [src]=\\\"photo.image\\\" />\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>\\r\\n             \\r\\n                <!-- type of motor -->\\r\\n                <ion-chip >\\r\\n                  <ion-icon name=\\\"car\\\"></ion-icon>\\r\\n                  <ion-label >{{item.type_caburant}}</ion-label>\\r\\n                </ion-chip>\\r\\n                <!-- Car price-->\\r\\n                <ion-chip >\\r\\n                  <!-- <ion-icon name=\\\"medal\\\" ></ion-icon> -->\\r\\n                  <ion-label  textWrap=\\\"true\\\">{{item.per_day}} F CFA / {{ 'DASHBOARD.day' | translate }}</ion-label>\\r\\n                </ion-chip> <br>\\r\\n                <!-- Number of Seats-->\\r\\n                <ion-chip >\\r\\n                  <ion-icon name=\\\"person\\\"></ion-icon>\\r\\n                  <ion-label >{{item.passager}} {{ 'DASHBOARD.seats' | translate }} </ion-label>\\r\\n                </ion-chip>\\r\\n                <!-- car color -->\\r\\n              <ion-chip>\\r\\n                <ion-label >{{ 'DASHBOARD.color' | translate }} {{item.couleur}} </ion-label> \\r\\n              </ion-chip>\\r\\n\\r\\n          </ion-card-subtitle>\\r\\n          <ion-card-title  > {{item.modele.libelle}}</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n                        \\r\\n               <!-- More-->\\r\\n             <ion-chip style=\\\"margin-left:30%\\\" (click)=\\\"carDetails(item.id)\\\" >\\r\\n                <ion-label >{{ 'DASHBOARD.btn_view_details' | translate }} </ion-label>\\r\\n                <ion-icon name=\\\"chevron-forward\\\"></ion-icon>\\r\\n            </ion-chip>\\r\\n\\r\\n      \\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n    <!-- </ion-item> -->\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\r\n\r\nimport { DashboardPage } from './dashboard.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Ng2SearchPipeModule,\r\n    DashboardPageRoutingModule,\r\n    TranslateModule\r\n  ],\r\n  declarations: [DashboardPage]\r\n})\r\nexport class DashboardPageModule {}\r\n","export default \"ion-card, ion-toolbar, ion-segment {\\n  --background: black;\\n}\\n\\nion-item {\\n  --background: black;\\n  color: #ffa60a;\\n}\\n\\nion-chip, ion-button {\\n  color: black;\\n  --background: #ffa60a;\\n  border-color: black;\\n}\\n\\nion-segment-button {\\n  color: #ffa60a;\\n}\\n\\nion-card-title {\\n  color: white;\\n}\\n\\nimg {\\n  height: 250px;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL0Q6XFxpb25pYzRcXGxvZ2luQ2FwL3NyY1xcYXBwXFxwYWdlc1xcZGFzaGJvYXJkXFxkYXNoYm9hcmQucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG1CQUFBO0FDQUo7O0FES0E7RUFFSSxtQkFBQTtFQUNBLGNBQUE7QUNISjs7QURNQTtFQUVJLFlBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FDSko7O0FET0E7RUFFSSxjQUFBO0FDTEo7O0FEUUE7RUFFSSxZQUFBO0FDTko7O0FEUUE7RUFFSSxhQUFBO0VBQ0EsV0FBQTtBQ05KIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZCxpb24tdG9vbGJhcixpb24tc2VnbWVudFxyXG57XHJcbiAgICAtLWJhY2tncm91bmQ6IGJsYWNrOyBcclxufVxyXG5cclxuXHJcblxyXG5pb24taXRlbVxyXG57XHJcbiAgICAtLWJhY2tncm91bmQ6IGJsYWNrOyBcclxuICAgIGNvbG9yOiAgI2ZmYTYwYTtcclxufVxyXG5cclxuaW9uLWNoaXAsaW9uLWJ1dHRvblxyXG57XHJcbiAgICBjb2xvcjogYmxhY2s7IFxyXG4gICAgLS1iYWNrZ3JvdW5kOiAjZmZhNjBhO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuaW9uLXNlZ21lbnQtYnV0dG9uXHJcbntcclxuICAgIGNvbG9yIDogI2ZmYTYwYTtcclxufVxyXG5cclxuaW9uLWNhcmQtdGl0bGVcclxue1xyXG4gICAgY29sb3IgOiB3aGl0ZTtcclxufVxyXG5pbWdcclxue1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufSIsImlvbi1jYXJkLCBpb24tdG9vbGJhciwgaW9uLXNlZ21lbnQge1xuICAtLWJhY2tncm91bmQ6IGJsYWNrO1xufVxuXG5pb24taXRlbSB7XG4gIC0tYmFja2dyb3VuZDogYmxhY2s7XG4gIGNvbG9yOiAjZmZhNjBhO1xufVxuXG5pb24tY2hpcCwgaW9uLWJ1dHRvbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgLS1iYWNrZ3JvdW5kOiAjZmZhNjBhO1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xufVxuXG5pb24tc2VnbWVudC1idXR0b24ge1xuICBjb2xvcjogI2ZmYTYwYTtcbn1cblxuaW9uLWNhcmQtdGl0bGUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmltZyB7XG4gIGhlaWdodDogMjUwcHg7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { AppServiceService } from 'src/app/service/appService/app-service.service';\r\n\r\n//import * as moment from 'moment';\r\n\r\n\r\nconst { Storage } = Plugins;\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.page.html',\r\n  styleUrls: ['./dashboard.page.scss'],\r\n})\r\nexport class DashboardPage implements OnInit {\r\n\r\n //////////////Date////////////////////\r\npublic  today: any ;     // today's date \r\npublic  maxdate : any;   // the maximum date of a date picker\r\n\r\n/////////////////////////////////\r\n  data: any;\r\n\r\n\r\n  datauser: any;\r\n  searchQuery:any;\r\n  destination_to_be_search : any;\r\n  logo1 ='../assets/images/logo1.jpg';\r\n  \r\n \r\n\r\n  public dataSaveReturn: any = \"\";\r\n\r\n//////////////////////////////search bar elements for cars ////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n  public isSearchbarOpened = false;\r\n  term = '';\r\n  filterData = [\r\n    {\r\n      'modele': '',\r\n      'id' : '',\r\n      'per_day' : '',\r\n      'per_hour' : '',\r\n      'airport' : '',\r\n      'color' : ''\r\n  \r\n  \r\n    }\r\n  \r\n  ];\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  ////////////data for destination////////////////////////\r\n  rent_type : any =\"hour\";\r\n  list_original = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  list_to_show = [\r\n    {\r\n        'id': '',\r\n        'destination' :'',\r\n        'coefficient' : ''\r\n    }\r\n  ];\r\n  selected_index = -1;\r\n  show_list = false;\r\n///////////////////////end data for destination search ///////////////////\r\n  \r\n\r\n   show = false // used to show page content\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, \r\n    private webService: AppServiceService) {\r\n      \r\n\r\n      //language\r\n     // this.selectedLanguage = this.translateConfigService.getDefaultLanguage();\r\n\r\n        // date\r\n         this.setDate();\r\n\r\n  \r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    /////////////////////////////////////////////////\r\n   //get voitures list\r\n   //present loading\r\n    this.webService.presentLoading();\r\n    this.webService.getVoitures().subscribe(async res=>{\r\n    console.log(\"getting voitures : \",res); \r\n    if(res)\r\n    {\r\n        this.filterData = res;\r\n        ////get the different prices of every car\r\n       for(let i=0 ; i< this.filterData.length ; i++)\r\n       {\r\n         this.webService.getPriceCar(this.filterData[i].id).subscribe( resp =>{\r\n\r\n          this.filterData[i].per_day = resp[0].prix;\r\n        //  this.filterData[i].per_hour = resp[1].prix;\r\n        //  this.filterData[i].airport = resp[2].prix;\r\n\r\n         }\r\n         );\r\n       }/////end get the different price of each car\r\n        \r\n    }\r\n\r\n      ////////////////////////////////////////////////////////////////////////////   \r\n      //get Destination list\r\n\r\n      this.webService.getDestinations().subscribe(async res=>{\r\n        console.log(\"getting Destinations : \",res); \r\n        if(res)\r\n        {\r\n            this.list_original = res;\r\n            \r\n        }\r\n\r\n      //  console.log(\"res : \", this.list_original)\r\n        this.webService.stopLoading();\r\n        this.show = true;\r\n      }); //// end get destinations\r\n      ////////////////////////////////////////////////////////////////////\r\n      \r\n\r\n  \r\n\r\n\r\n  });/// end get voitures\r\n ////////////////////////////////////////////////////\r\n\r\n  }//end of ngOnInit\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n\r\nsetDate()\r\n{\r\n  let date : Date = new Date();\r\n  var month, day\r\n  //today's date\r\n  this.today = date.getFullYear() +\"-\"+ (date.getMonth()+1) + \"-\"+date.getDate();\r\n\r\n     if(date.getMonth()+1 <10)\r\n     {\r\n       month = \"0\"+(date.getMonth()+1)\r\n     }else{\r\n       month = date.getMonth()+1\r\n     }\r\n\r\n     if(date.getDate() <10)\r\n     {\r\n       day = \"0\"+date.getDate()\r\n     }else{\r\n       day = date.getDate()\r\n     }\r\n\r\n     this.today = date.getFullYear() +\"-\"+ month + \"-\"+day\r\n\r\n\r\n  //maximum date\r\n  var x =  new Date().setDate( date.getDate()+90 )\r\n  this.maxdate = new Date(x)\r\n\r\n  if(this.maxdate.getMonth()+1 <10)\r\n  {\r\n    month = \"0\"+(this.maxdate.getMonth()+1)\r\n  }else{\r\n     month = this.maxdate.getMonth()+1\r\n  }\r\n\r\n  if(this.maxdate.getDate() <10)\r\n  {\r\n    day = \"0\"+this.maxdate.getDate()\r\n  }else{\r\n    day = this.maxdate.getDate()\r\n  }\r\n\r\n  this.maxdate = this.maxdate.getFullYear() +\"-\"+ month + \"-\"+day\r\n  \r\n\r\n\r\n  console.log(\"Today = \" + this.today + \" \\n MAX DATE : \"+ this.maxdate); \r\n\r\n\r\n\r\n}\r\n///////////////end set Date//////////////////////////////////////\r\n//////////////////////////////////////////////////////\r\n\r\n\r\n//this method is used to print the details of a selected car //////////////\r\n  carDetails(carID){\r\n\r\n\r\n    //call another page and fetch the details of the car\r\n    this.router.navigate(['car-details'], {queryParams:{id: carID, prev : \"/dashboard\"} })\r\n\r\n\r\n  }\r\n\r\n//////////////////////end call carDetails///////////////////////////\r\n\r\n\r\n\r\n  //////////////method for destination search //////////////////\r\n    /////////////////////////////////////////////////////\r\n    onCancel(val) {\r\n      this.show_list = false;\r\n      this.list_to_show = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n  \r\n    }\r\n  \r\n    click_bar() {\r\n      this.list_to_show = [\r\n        {\r\n            'id': '',\r\n            'destination' :'',\r\n            'coefficient' : ''\r\n        }\r\n      ];\r\n      this.show_list = true;\r\n    }\r\n  \r\n    click_item(val)\r\n    {\r\n          for (let i = 0 ; i < this.list_original.length; i++)\r\n          {\r\n              if (this.list_to_show[val].destination.toUpperCase() === this.list_original[i].destination.toUpperCase()) {\r\n                  this.selected_index = i;\r\n\r\n                  //print the selected destination\r\n                  this.searchQuery = this.list_to_show[val].destination;\r\n\r\n                  // set the destinatination to be search\r\n                  this.destination_to_be_search  = this.list_to_show[val];\r\n\r\n                  break;\r\n              }\r\n          }\r\n          this.show_list = false;\r\n    }\r\n  \r\n    change_query(query)\r\n    {\r\n    \r\n              let k = 0;\r\n              this. list_to_show = [\r\n                {\r\n                    'id': '',\r\n                    'destination' :'',\r\n                    'coefficient' : ''\r\n                }\r\n              ];\r\n              for (let i = 0 ; i < this.list_original.length; i++)\r\n              {\r\n                  if (this.list_original[i].destination.toUpperCase().includes(query.toUpperCase()))\r\n                  {\r\n                      this.list_to_show[k] =  this.list_original[i];\r\n                      k += 1;\r\n                  }\r\n              }\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}